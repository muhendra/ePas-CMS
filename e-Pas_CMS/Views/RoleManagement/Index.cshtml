@using e_Pas_CMS.ViewModels
@model RoleManagementIndexViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    int totalPages = Model.TotalPages;
    int currentPage = Model.CurrentPage;
    int windowSize = 10;

    int currentWindow = (int)Math.Ceiling((double)currentPage / windowSize);
    int startPage = (currentWindow - 1) * windowSize + 1;
    int endPage = Math.Min(startPage + windowSize - 1, totalPages);
}

<div class="mt-4 px-4">
    @* <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">Role Management</h3>
        <a href="@Url.Action("Add", "RoleManagement")" class="btn btn-primary">
            <i class="bi bi-plus-lg me-1"></i> Tambah Role
        </a>
    </div> *@

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form method="get" class="row g-2 mb-4">
        <div class="col-md-4">
            <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Cari Nama Role atau App..." />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-outline-primary"><i class="bi bi-search"></i> Cari</button>
            <a href="@Url.Action("Index", "RoleManagement")" class="btn btn-outline-secondary ms-1">Reset</a>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr class="align-middle text-center">
                    <th>No</th>
                    <th>Nama Role</th>
                    <th>App</th>
                    <th>Menu Function</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {
                    int index = (Model.CurrentPage - 1) * 10 + 1;
                    foreach (var item in Model.Items)
                    {
                        <tr class="text-center">
                            <td>@index</td>
                            <td>@item.NamaRole</td>
                            <td>@item.App</td>
                            <td>@item.MenuFunction</td>
                            <td>
                                <span class="badge @(item.IsActive ? "bg-success" : "bg-secondary")">
                                    @item.Status
                                </span>
                            </td>
                            <td>
                                <a href="@Url.Action("Detail", "RoleManagement", new { id = item.Id })" class="btn btn-sm btn-outline-primary me-1">
                                    <i class="bi bi-eye me-1"></i> Detail
                                </a>
                                <a href="@Url.Action("Edit", "RoleManagement", new { id = item.Id })" class="btn btn-sm btn-outline-secondary me-1">
                                    <i class="bi bi-pencil me-1"></i> Edit
                                </a>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center">Data tidak ditemukan.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model.TotalPages > 1)
    {
        <nav class="mt-3">
            <ul class="pagination justify-content-start">
                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = startPage - 1, searchTerm = Model.SearchTerm })">« Prev</a>
                    </li>
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, searchTerm = Model.SearchTerm })">@i</a>
                    </li>
                }

                @if (endPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = endPage + 1, searchTerm = Model.SearchTerm })">Next »</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        setTimeout(function () {
            var alert = document.querySelector('.alert');
            if (alert) {
                var bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                bsAlert.close();
            }
        }, 5000);
    </script>
}
