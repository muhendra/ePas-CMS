@inject e_Pas_CMS.Data.EpasDbContext _context
@using System.Security.Claims
@using Newtonsoft.Json
@using System

@model e_Pas_CMS.ViewModels.ComplainDetailViewModel
@{
    ViewData["Title"] = Model.IsBanding ? "Detail Banding" : "Detail Komplain";

    string statusClass = "bg-warning";
    string statusText = Model.StatusText ?? "-";
    switch ((Model.StatusCode ?? "").Trim().ToUpperInvariant())
    {
        case "APPROVE_PPN":
        case "APPROVE":
            statusClass = "bg-success";
            break;
        case "REJECTED": statusClass = "bg-danger"; break;
        default: statusClass = "bg-warning"; break;
    }

    var userIdString = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

    bool hasApproveRoleSBM = false;
    bool hasApproveRolePPN = false;
    bool hasRoleCBI = false;

    if (!string.IsNullOrEmpty(userIdString))
    {
        // 1x roundtrip ke DB: ambil role yang relevan saja
        var wanted = new[] { "SBM", "PPN", "CBI" };

        var roleSet = new HashSet<string>(
            (from ur in _context.app_user_roles
             join r in _context.app_roles on ur.app_role_id equals r.id
             where ur.app_user_id == userIdString && wanted.Contains(r.name)
             select r.name).ToList(),
            StringComparer.OrdinalIgnoreCase // aman untuk case-insensitive
        );

        hasApproveRoleSBM = roleSet.Contains("SBM");
        hasApproveRolePPN = roleSet.Contains("PPN");
        hasRoleCBI = roleSet.Contains("CBI");
    }
}

<style>
    .card-soft { border: 1px solid #eef2f7; border-radius: .75rem; }
    .section-title { font-weight: 600; font-size: 1.05rem; margin-bottom: .75rem; }
    .kv .label { color: #6b7280; font-size: .85rem; }
    .kv .value { font-weight: 500; }
    .banner-status { border-radius: .75rem; text-align: center; padding: .95rem 1rem; }
    .muted { color: #6b7280; }
    .min-h-row { min-height: 28px; }
    .table-sm th, .table-sm td { vertical-align: middle; }
    .point-title { font-weight: 600; margin-bottom: .5rem; }
    .divider { height: 1px; background: #eef2f7; margin: 1rem 0; }

    .btn-gradient-green {
        background: linear-gradient(135deg, #10b981, #059669);
        color: #fff;
        border: none;
    }

        .btn-gradient-green:hover {
            background: linear-gradient(135deg, #059669, #047857);
            color: #fff;
        }

    .btn-gradient-red {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: #fff;
        border: none;
    }

        .btn-gradient-red:hover {
            background: linear-gradient(135deg, #dc2626, #b91c1c);
            color: #fff;
        }

    .btn-gradient-blue {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        color: #fff;
        border: none;
    }

        .btn-gradient-blue:hover {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: #fff;
        }

    /* Efek hover scale */
    .hover-scale {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .hover-scale:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0,0,0,0.15);
        }

</style>

<div class="container-fluid px-0">
    <!-- Breadcrumb + Title -->
    <div class="mb-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb small mb-1">
                <li class="breadcrumb-item"><a asp-controller="Banding" asp-action="Index">Banding</a></li>
                <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
            </ol>
        </nav>
        <h4 class="mb-0">@ViewData["Title"]</h4>
    </div>

    <!-- Status Banner (kuning/merah/hijau sesuai status) -->
    @if (Model.feedback_type != "COMPLAINT")
    {
        <div class="mb-3">
            <div class="banner-status @statusClass text-white">
                <h4 class="fw-bold mb-0">@statusText</h4>
            </div>
        </div>
    }

    <!-- Informasi SPBU -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi SPBU</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col">
                    <div class="label">Nomor SPBU</div>
                    <div class="value min-h-row">@Model.NoSpbu</div>
                </div>
                <div class="col">
                    <div class="label">Region</div>
                    <div class="value min-h-row">@Model.Region</div>
                </div>
                <div class="col">
                    <div class="label">Kabupaten/Kota</div>
                    <div class="value min-h-row">@Model.City</div>
                </div>
                <div class="col">
                    <div class="label">Alamat SPBU</div>
                    <div class="value min-h-row">@Model.Address</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Informasi Kegiatan Audit -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi Kegiatan Audit</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col">
                    <div class="label">No. Report</div>
                    <div class="value">@Model.ReportNo</div>
                </div>
                <div class="col">
                    <div class="label">Tanggal Audit</div>
                    <div class="value">
                        @(Model.TanggalAudit.HasValue ? Model.TanggalAudit.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")
                    </div>
                </div>
                <div class="col">
                    <div class="label">Sent Date</div>
                    <div class="value">
                        @(Model.SentDate.HasValue ? Model.SentDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")
                    </div>
                </div>
                <div class="col">
                    <div class="label">Verifikator</div>
                    <div class="value">@(!string.IsNullOrWhiteSpace(Model.Verifikator) ? Model.Verifikator : "-")</div>
                </div>
                <div class="col">
                    <div class="label">Auditor 1</div>
                    <div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor1) ? Model.Auditor1 : "-")</div>
                </div>
                <div class="col">
                    <div class="label">Auditor 2</div>
                    <div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor2) ? Model.Auditor2 : "-")</div>
                </div>
                <div class="col">
                    <div class="label">Tipe Audit</div>
                    <div class="value">@Model.TipeAudit</div>
                </div>
                <div class="col">
                    <div class="label">Next Audit</div>
                    <div class="value">@Model.NextAudit</div>
                </div>
                <div class="col">
                    <div class="label">Ko-ordinator</div>
                    <div class="value">@(!string.IsNullOrWhiteSpace(Model.Koordinator) ? Model.Koordinator : "-")</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Informasi Banding/Komplain -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi @(Model.IsBanding ? "Banding" : "Komplain")</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                @if (Model.feedback_type != "COMPLAINT")
                {
                    <div class="col">
                        <div class="label">Status @(Model.IsBanding ? "Banding" : "Komplain")</div>
                        <div class="value">@statusText</div>
                    </div>
                }
                
                <div class="col">
                    <div class="label">Nomor Tiket</div>
                    <div class="value">@Model.TicketNo</div>
                </div>
                <div class="col">
                    <div class="label">Nomor Banding</div>
                    <div class="value">@(!string.IsNullOrWhiteSpace(Model.NomorBanding) ? Model.NomorBanding : "-")</div>
                </div>
                <div class="col">
                    <div class="label">Tgl Pengajuan</div>
                    <div class="value">
                        @(Model.CreatedDate.HasValue ? Model.CreatedDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Daftar Poin Banding/Komplain (per poin seperti gambar) -->
    @if (Model.Points != null && Model.Points.Any())
    {
        var idx = 1;
        foreach (var p in Model.Points)
        {
            <div class="card card-soft mb-3">
                <div class="card-body">
                    <div class="point-title">Poin @idx</div>

                    <div class="table-responsive mb-3">
                        <table class="table table-sm align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width:140px">Element</th>
                                    <th style="width:160px">Sub Element</th>
                                    <th style="width:180px">Detail Element</th>
                                    <th>Element yang @(Model.IsBanding ? "dibanding" : "dikomplain")</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@(string.IsNullOrWhiteSpace(p.Element) ? "-" : p.Element)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.SubElement) ? "-" : p.SubElement)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.DetailElement) ? "-" : p.DetailElement)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.DetailDibantah) ? "-" : p.DetailDibantah)</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="mb-2 fw-semibold">Isi @(Model.IsBanding ? "Banding" : "Komplain")</div>
                    <div class="muted mb-3">
                        @(string.IsNullOrWhiteSpace(p.Description) ? "-" : p.Description)
                    </div>
                    @* ================== BEGIN: Dokumen Pendukung ================== *@
                    
                    <div class="mb-2 fw-semibold mt-4">Dokumen Pendukung</div>
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="bi bi-file-earmark-image text-primary"></i>
                                <button type="button"
                                        class="btn btn-link text-decoration-none p-0"
                                    onclick='showFinalMediaPopup(@Html.Raw(JsonConvert.SerializeObject(Model.Attachments)))'>
                                    Lihat Lampiran
                                </button>
                            </li>
                        </ul>
                    
                    @* ================== END: Dokumen Pendukung ================== *@

                </div>
            </div>
            idx++;
        }
    }

    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Klarifikasi (Diisi oleh User Approval)</div>
            <p class="text-muted mb-2">
                Masukkan ringkasan klarifikasi untuk <strong>keseluruhan</strong> komplain/banding ini.
            </p>
            <textarea id="txtKlarifikasi"
                      class="form-control"
                      rows="4"
                      placeholder="Tulis klarifikasi di sini...">@Model.Klarifikasi</textarea>
            <small class="text-muted">Klarifikasi ini akan ikut tersimpan saat Anda menekan tombol Approve/Reject.</small>
        </div>
    </div>

    <!-- Tombol aksi -->
    <div class="d-flex flex-wrap gap-2 align-items-center mb-4">
        <a asp-controller="Banding" asp-action="Index"
           class="btn btn-outline-secondary rounded-pill px-4 py-2 shadow-sm hover-scale">
            <i class="bi bi-arrow-left-circle"></i> Kembali
        </a>

        @* STEP 1 (SBM) *@
        @if (Model.StatusCode == "IN_PROGRESS_SUBMIT" && hasApproveRoleSBM && Model.feedback_type != "COMPLAINT")
        {
            <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="klarifikasi" value="" /> @* diisi via JS *@
                <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2">
                    <i class="bi bi-check-circle"></i> Approve
                </button>
            </form>

            <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="klarifikasi" value="" /> @* diisi via JS *@
                <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                    <i class="bi bi-x-circle"></i> Reject
                </button>
            </form>
        }

        @* STEP 2 (PPN) *@
        @if (Model.StatusCode == "APPROVE_SBM" && hasApproveRolePPN && Model.feedback_type != "COMPLAINT")
        {
            <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="klarifikasi" value="" />
                <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2">
                    <i class="bi bi-check-circle"></i> Approve
                </button>
            </form>

            <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="klarifikasi" value="" />
                <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                    <i class="bi bi-x-circle"></i> Reject
                </button>
            </form>
        }

        @* STEP 3 (CBI) — Reassign laporan *@
        @if (Model.StatusCode == "APPROVE_PPN" && hasRoleCBI && Model.feedback_type != "COMPLAINT")
        {
            <button class="btn btn-gradient-blue rounded-pill px-4 py-2 shadow-sm hover-scale"
                    data-bs-toggle="modal" data-bs-target="#confirmModal">
                <i class="bi bi-arrow-repeat"></i> Reassign Laporan Audit
            </button>
        }
    </div>


</div>

@* ================== BEGIN: Modal Preview Lampiran ================== *@
<!-- Modal Konfirmasi -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Persetujuan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin mengembalikan laporan audit ini?
            </div>
            <div class="modal-footer">
                <form method="post"
                      asp-controller="Complain"
                      asp-action="Reassign"
                      asp-route-id="@Model.Id"
                      class="needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="klarifikasi" value="" /> @* diisi via JS *@
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Ya, Setujui</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal Media -->
<div class="modal fade" id="mediaModal" tabindex="-1" aria-labelledby="mediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mediaModalLabel">Dokumentasi Foto / Video</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body" id="mediaModalBody">
                <!-- Media will be inserted here -->
            </div>
        </div>
    </div>
</div>

<!-- Modal Full Size Media -->
<div class="modal fade" id="fullSizeMediaModal" tabindex="-1" aria-labelledby="fullSizeMediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body p-0 position-relative" id="fullSizeMediaModalBody">
                <!-- Full size media will be inserted here -->
            </div>
            <div class="modal-footer justify-content-end">
                <button type="button" class="btn btn-primary" id="useMediaBtn" style="display: none;">
                    Gunakan media ini
                </button>
            </div>
        </div>
    </div>
</div>
@* ================== END: Modal Preview Lampiran ================== *@

@section Scripts {
    <script>
        function showFinalMediaPopup(mediaItems) {
          showMediaPopup(mediaItems);
        }

        // Ambil properti pertama yang ada + non-empty
        function pick(obj, ...keys) {
          for (const k of keys) {
            if (obj && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, k)) {
              const v = obj[k];
              if (v !== null && v !== undefined && v !== '') return v;
            }
          }
          return '';
        }

        function toSrc(item) {
          // Kalau server kirim string langsung
          if (typeof item === 'string') return item;

          // Coba semua varian penamaan yang mungkin
          const raw = pick(
            item,
            'MediaPath','mediaPath','media_path',
            'Url','URL','url',
            'Path','path',
            'Href','href'
          );

          return raw || '';
        }

        function toType(item) {
          if (typeof item === 'string') {
            // Kasih hint dari ekstensi
            return item.toLowerCase().endsWith('.mp4') ? 'VIDEO' : 'IMAGE';
          }
          return (pick(item, 'MediaType','mediaType','media_type','type') || '').toUpperCase();
        }

        function safeUrl(u) {
          try { return encodeURI(u); } catch { return u || ''; }
        }

        function showMediaPopup(mediaItems) {
          const container = document.getElementById('mediaModalBody');
          container.innerHTML = '';

          console.debug('mediaItems:', mediaItems);

          if (!Array.isArray(mediaItems) || mediaItems.length === 0) {
            container.innerHTML = '<p class="text-muted">Tidak ada media tersedia.</p>';
            new bootstrap.Modal(document.getElementById('mediaModal'), { backdrop:'static', keyboard:false, focus:false }).show();
            return;
          }

          const items = mediaItems.map((it, i) => {
            const srcRaw = toSrc(it);
            const src = safeUrl((srcRaw || '').trim());
            const t   = toType(it);
            const isVideo = t === 'VIDEO' || src.toLowerCase().endsWith('.mp4');

            console.debug(`item[${i}] -> src:`, src, 'type:', t);

            if (!src) {
              return { html: '<div class="p-4 text-center text-muted">Media tidak memiliki URL.</div>', isActive: false };
            }

            const html = isVideo
              ? `<video controls class="d-block w-100 rounded"><source src="${src}" type="video/mp4"></video>`
              : `<img src="${src}" class="d-block w-100 rounded" alt="">`;

            return { html, isActive: false };
          });

          if (items.length === 1) {
            container.innerHTML = items[0].html;
          } else {
            const carouselId = 'mediaCarousel_' + Date.now();
            const indicators = [];
            const inner = [];

            items.forEach((x, idx) => {
              const active = idx === 0 ? 'active' : '';
              indicators.push(
                `<button type="button" data-bs-target="#${carouselId}" data-bs-slide-to="${idx}" class="${active}" aria-current="${active ? 'true' : ''}" aria-label="Slide ${idx + 1}"></button>`
              );
              inner.push(`<div class="carousel-item ${active}">${x.html}</div>`);
            });

            container.innerHTML = `
              <div id="${carouselId}" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-indicators">${indicators.join('')}</div>
                <div class="carousel-inner">${inner.join('')}</div>
                <button class="carousel-control-prev" type="button" data-bs-target="#${carouselId}" data-bs-slide="prev">
                  <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#${carouselId}" data-bs-slide="next">
                  <span class="carousel-control-next-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Next</span>
                </button>
              </div>`;
          }

          new bootstrap.Modal(document.getElementById('mediaModal'), { backdrop:'static', keyboard:false, focus:false }).show();
         // ======= KLARIFIKASI (baru) =======
        (function () {
            // Ambil textarea Klarifikasi (satu kali untuk seluruh trx_feedback)
            const txtKlarifikasi = document.getElementById('txtKlarifikasi');

            function getKlarifikasi() {
                return (txtKlarifikasi && typeof txtKlarifikasi.value === 'string')
                    ? txtKlarifikasi.value.trim()
                    : '';
            }

            // Isi hidden 'klarifikasi' untuk semua form dengan class 'needs-klarifikasi'
            document.addEventListener('submit', function (ev) {
                const form = ev.target;
                if (!form || !form.classList || !form.classList.contains('needs-klarifikasi')) return;

                const hidden = form.querySelector('input[name="klarifikasi"]');
                if (hidden) {
                    hidden.value = getKlarifikasi();
                }
                // Jika ingin mewajibkan klarifikasi untuk Reject, aktifkan blok di bawah:
                // if (form.action && /\/Reject\b/i.test(form.action) && hidden && !hidden.value) {
                //     ev.preventDefault();
                //     alert('Mohon isi klarifikasi sebelum melakukan Reject.');
                //     return false;
                // }
            }, true);
        })();
    </script>
}

