@inject e_Pas_CMS.Data.EpasDbContext _context
@using System.Security.Claims
@using Newtonsoft.Json
@using System

@model e_Pas_CMS.ViewModels.ComplainDetailViewModel
@{
    ViewData["Title"] = Model.IsBanding ? "Detail Banding" : "Detail Komplain";

    var statusNorm = (Model.StatusCode ?? "").Trim().ToUpperInvariant();
    var feedbackTypeNorm = (Model.feedback_type ?? "").Trim().ToUpperInvariant();

    string statusClass = "bg-warning";
    string statusText = Model.StatusText ?? "-";
    switch (statusNorm)
    {
        case "APPROVE":
        case "BYPASS_APPROVE_PPN":
            statusClass = "bg-success"; break;
        case "REJECT":
        case "REJECT_CBI":
            statusClass = "bg-danger"; break;
        default:
            statusClass = "bg-warning"; break;
    }

    var userIdString = Context.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

    bool hasApproveRoleSBM = false;
    bool hasApproveRolePPN = false;
    bool hasRoleCBI = false;
    bool hasRolePertamina = false;

    if (!string.IsNullOrEmpty(userIdString))
    {
        var wanted = new[] { "SBM", "PPN", "CBI", "PERTAMINA" };
        var roleSet = new HashSet<string>(
            (from ur in _context.app_user_roles
             join r in _context.app_roles on ur.app_role_id equals r.id
             where ur.app_user_id == userIdString && wanted.Contains(r.name.ToUpper())
             select r.name.ToUpper()).ToList()
        );

        hasApproveRoleSBM = roleSet.Contains("SBM");
        hasApproveRolePPN = roleSet.Contains("PPN");
        hasRoleCBI = roleSet.Contains("CBI");
        hasRolePertamina = roleSet.Contains("PERTAMINA");
    }

    Func<string, string> norm = s => (s ?? "").Trim().ToUpperInvariant();

    var stageToValidate = statusNorm;

    bool AllPointsProcessedCurrentStage =
        (norm(statusNorm) == "REJECT_CBI" && hasRolePertamina)
        ||
        (
            Model?.Points != null && Model.Points.Any() &&
            Model.Points.All(p =>
            {
                var elementText = (p?.Element ?? "").Trim();
                bool rejectTagged = elementText.ToUpperInvariant().Contains("REJECT");

                bool hasHist = p?.History != null && p.History.Any(h =>
                {
                    var sc = (h.StatusCode ?? "").Trim().ToUpperInvariant();
                    var st = (h.Status ?? "").Trim().ToUpperInvariant();
                    return sc == stageToValidate && (st == "APPROVE" || st == "REJECT");
                });

                return rejectTagged || hasHist;
            })
        );

    var canShowActionsContainer =
        (statusNorm == "APPROVE_PPN" && hasRoleCBI)
        || AllPointsProcessedCurrentStage
        || norm(statusNorm) == "APPROVE_SBM"
        || norm(statusNorm) == "APPROVE_CBI"
        || norm(statusNorm) == "APPROVE"
        || (hasRolePertamina && norm(statusNorm) == "REJECT_CBI");

    var approvalHistory = ViewBag.ApprovalHistory as IEnumerable<e_Pas_CMS.Models.TrxFeedbackPointApproval>;

    Func<string, string> stageText = s =>
    {
        var v = (s ?? "").Trim().ToUpperInvariant();
        return v switch
        {
            "UNDER_REVIEW" => "Menunggu Persetujuan SBM",
            "APPROVE_SBM" => "Menunggu Persetujuan PPN",
            "APPROVE_PPN" => "Menunggu Persetujuan CBI",
            "APPROVE_CBI" => "Menunggu Persetujuan Pertamina",
            "APPROVE" => "Banding Disetujui",
            "BYPASS_APPROVE_PPN" => "Bypass Approve PPN",
            "REJECT" => "Ditolak",
            "REJECT_CBI" => "Ditolak",
            _ => s ?? "-"
        };
    };
}

<style>
    .card-soft {
        border: 1px solid #eef2f7;
        border-radius: .75rem;
    }

    .section-title {
        font-weight: 600;
        font-size: 1.05rem;
        margin-bottom: .75rem;
    }

    .kv .label {
        color: #6b7280;
        font-size: .85rem;
    }

    .kv .value {
        font-weight: 500;
    }

    .banner-status {
        border-radius: .75rem;
        text-align: center;
        padding: .95rem 1rem;
    }

    .muted {
        color: #6b7280;
    }

    .min-h-row {
        min-height: 28px;
    }

    .table-sm th, .table-sm td {
        vertical-align: top;
    }

    .point-title {
        font-weight: 600;
        margin-bottom: .5rem;
    }

    .divider {
        height: 1px;
        background: #eef2f7;
        margin: 1rem 0;
    }

    .btn-gradient-green {
        background: linear-gradient(135deg,#10b981,#059669);
        color: #fff;
        border: none;
    }

        .btn-gradient-green:hover {
            background: linear-gradient(135deg,#059669,#047857);
            color: #fff;
        }

    .btn-gradient-red {
        background: linear-gradient(135deg,#ef4444,#dc2626);
        color: #fff;
        border: none;
    }

        .btn-gradient-red:hover {
            background: linear-gradient(135deg,#dc2626,#b91c1c);
            color: #fff;
        }

    .btn-gradient-blue {
        background: linear-gradient(135deg,#3b82f6,#2563eb);
        color: #fff;
        border: none;
    }

        .btn-gradient-blue:hover {
            background: linear-gradient(135deg,#2563eb,#1d4ed8);
            color: #fff;
        }

    .hover-scale {
        transition: transform .2s, box-shadow .2s;
    }

        .hover-scale:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0,0,0,.15);
        }

    .thumb-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 0;
    }

    .thumb {
        position: relative;
        width: 140px;
        height: 100px;
        overflow: hidden;
        border: 1px solid #ccc;
        border-radius: 6px;
        cursor: pointer;
    }

        .thumb img, .thumb video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .thumb .play {
            position: absolute;
            top: 35%;
            left: 35%;
            color: #fff;
            font-size: 2rem;
        }

    .thumb-note {
        font-size: .8rem;
        color: #6c757d;
        margin-top: .25rem;
    }

    .dz {
        transition: border-color .2s, background-color .2s;
        border-style: dashed !important;
    }

        .dz.dragover {
            border-color: #2563eb !important;
            background: #e9f1ff;
        }
</style>

<div class="container-fluid px-0">
    <!-- Breadcrumb + Title -->
    <div class="mb-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb small mb-1">
                <li class="breadcrumb-item"><a asp-controller="Banding" asp-action="Index">Banding</a></li>
                <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
            </ol>
        </nav>
        <h4 class="mb-0">@ViewData["Title"]</h4>
    </div>

    <!-- Status Banner -->
    @if (feedbackTypeNorm != "COMPLAINT")
    {
        <div class="mb-3">
            <div class="banner-status @statusClass text-white">
                <h4 class="fw-bold mb-0">@statusText</h4>
            </div>
        </div>
    }

    <!-- Informasi SPBU -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi SPBU</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col"><div class="label">Nomor SPBU</div><div class="value min-h-row">@Model.NoSpbu</div></div>
                <div class="col"><div class="label">Region</div><div class="value min-h-row">@Model.Region</div></div>
                <div class="col"><div class="label">Kabupaten/Kota</div><div class="value min-h-row">@Model.City</div></div>
                <div class="col"><div class="label">Alamat SPBU</div><div class="value min-h-row">@Model.Address</div></div>
            </div>
        </div>
    </div>

    <!-- Informasi Kegiatan Audit -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi Kegiatan Audit</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col"><div class="label">No. Report</div><div class="value">@Model.ReportNo</div></div>
                <div class="col"><div class="label">Tanggal Audit</div><div class="value">@(Model.TanggalAudit.HasValue ? Model.TanggalAudit.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
                <div class="col"><div class="label">Sent Date</div><div class="value">@(Model.SentDate.HasValue ? Model.SentDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
                <div class="col"><div class="label">Verifikator</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Verifikator) ? Model.Verifikator : "-")</div></div>
                <div class="col"><div class="label">Auditor 1</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor1) ? Model.Auditor1 : "-")</div></div>
                <div class="col"><div class="label">Auditor 2</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor2) ? Model.Auditor2 : "-")</div></div>
                <div class="col"><div class="label">Tipe Audit</div><div class="value">@Model.TipeAudit</div></div>
                <div class="col"><div class="label">Next Audit</div><div class="value">@Model.NextAudit</div></div>
                <div class="col"><div class="label">Ko-ordinator</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Koordinator) ? Model.Koordinator : "-")</div></div>
            </div>
        </div>
    </div>

    <!-- Informasi Banding/Komplain -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi @(Model.IsBanding ? "Banding" : "Komplain")</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                @if (feedbackTypeNorm != "COMPLAINT")
                {
                    <div class="col">
                        <div class="label">Status @(Model.IsBanding ? "Banding" : "Komplain")</div>
                        <div class="value">@statusText</div>
                    </div>
                }
                <div class="col"><div class="label">Nomor Tiket</div><div class="value">@Model.TicketNo</div></div>
                <div class="col"><div class="label">Nomor Banding</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.NomorBanding) ? Model.NomorBanding : "-")</div></div>
                <div class="col"><div class="label">Tgl Pengajuan</div><div class="value">@(Model.CreatedDate.HasValue ? Model.CreatedDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
            </div>
        </div>
    </div>

    <!-- Daftar Poin -->
    @if (Model.Points != null && Model.Points.Any())
    {
        var idx = 1;
        foreach (var p in Model.Points)
        {
            var thumbsId = $"thumbs_{idx}";

            bool pointProcessedThisStage = p?.History != null && p.History.Any(h =>
            {
                var sc = (h.StatusCode ?? "").Trim().ToUpperInvariant();
                var st = (h.Status ?? "").Trim().ToUpperInvariant();
                return sc == statusNorm && (st == "APPROVE" || st == "REJECT");
            });

            var elementText = string.IsNullOrWhiteSpace(p.Element) ? "-" : p.Element;
            bool rejectTagged = elementText.ToUpperInvariant().Contains("REJECT");

            // media per poin -> serialize untuk grid kanan
            var photoGridId = $"photo_point_{idx}";
            var mediaJson = (p?.mediaElement != null && p.mediaElement.Any())
            ? JsonConvert.SerializeObject(p.mediaElement)
            : ((string)ViewBag.mediaElement ?? "[]");

            <div class="card card-soft mb-3">
                <div class="card-body">
                    <div class="point-title">Poin @idx</div>

                    <div class="table-responsive">
                        <table class="table table-sm align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width:140px">Element</th>
                                    <th style="width:160px">Sub Element</th>
                                    <th style="width:180px">Detail Element</th>
                                    <th>Element yang @(Model.IsBanding ? "dibanding" : "dikomplain")</th>
                                    <th style="width:280px">Foto Elemen yang dibanding</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="@(rejectTagged ? "text-danger fw-bold" : "")">@elementText</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.SubElement) ? "-" : p.SubElement)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.DetailElement) ? "-" : p.DetailElement)</td>
                                    <td>@Html.Raw(string.IsNullOrWhiteSpace(p.DetailDibantah) ? "-" : p.DetailDibantah.Replace("\n", "<br />"))</td>
                                    <td>
                                        <div id="@photoGridId" class="thumb-grid"
                                             data-items='@Html.Raw(mediaJson)'></div>
                                        <div class="thumb-note">Klik gambar/video untuk melihat ukuran penuh.</div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @* Tombol approve/reject per poin *@
                    @if (!rejectTagged && !pointProcessedThisStage && (
                   (statusNorm == "UNDER_REVIEW" && hasApproveRoleSBM) ||
                   (statusNorm == "APPROVE_SBM" && hasApproveRolePPN)
                   ))
                    {
                        <div class="mt-3 d-flex gap-2">
                            <form asp-action="ApprovePoint" asp-route-id="@p.PointId" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-success">
                                    <i class="bi bi-check-circle"></i> Approve
                                </button>
                            </form>
                            <form asp-action="RejectPoint" asp-route-id="@p.PointId" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="bi bi-x-circle"></i> Reject
                                </button>
                            </form>
                        </div>
                    }

                    @* Riwayat approval tahap saat ini *@
                    @if (p.History != null && p.History.Any())
                    {
                        var filtered = p.History
                        .Where(x => (x.StatusCode ?? "").Trim().ToUpperInvariant() == statusNorm)
                        .ToList();

                        if (filtered.Any())
                        {
                            <div class="mt-2 small text-muted">
                                <strong>Riwayat Approval (Tahap @statusNorm):</strong>
                                <ul class="mb-0 ps-3">
                                    @foreach (var h in filtered)
                                    {
                                        <li>@h.ApprovedDate.ToString("dd/MM/yyyy HH:mm") - <strong>@h.Status</strong> oleh @h.ApprovedBy</li>
                                    }
                                </ul>
                            </div>
                        }
                    }

                    <div class="mb-2 fw-semibold mt-3">Isi @(Model.IsBanding ? "Banding" : "Komplain")</div>
                    <div class="muted">@(string.IsNullOrWhiteSpace(p.Description) ? "-" : p.Description)</div>
                    <div class="label">Dokumen Pendukung</div>
                    @if (string.IsNullOrWhiteSpace(ViewBag.AttachmentsJson) || ViewBag.AttachmentsJson == "[]")
                    {
                        <div class="text-muted">Tidak ada dokumen pendukung.</div>
                    }
                    else
                    {
                        <div id="@thumbsId" class="thumb-grid" data-items='@Html.Raw(ViewBag.AttachmentsJson)'></div>
                    }
                </div>
            </div>

            idx++;
        }
    }

    @if (statusNorm == "APPROVE_PPN" && hasRoleCBI)
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="section-title">Klarifikasi (CBI)</div>
                <div class="row g-3">
                    <!-- Kolom kiri: upload dokumen -->
                    <div class="col-12 col-lg-6">
                        <label class="form-label fw-semibold">Upload Dokumen Klarifikasi</label>

                        <form method="post"
                              asp-action="UploadKlarifikasiMedia"
                              asp-controller="Banding"
                              asp-route-bandingId="@ViewBag.BandingId"
                              enctype="multipart/form-data"
                              id="formUploadKlarifikasi">
                            @Html.AntiForgeryToken()
                            <!-- Dropzone -->
                            <div id="dropzoneKlarifikasi" class="dz border rounded-3 p-3 bg-light text-center">
                                <input type="file"
                                       class="d-none"
                                       id="KlarifikasiFile"
                                       name="file"
                                       accept=".jpg,.jpeg,.png,.pdf,.doc,.docx,.xls,.xlsx,.mp4,.zip"
                                       required />

                                <div class="dz-icon mb-2">
                                    <i class="bi bi-cloud-arrow-up" style="font-size:2rem;"></i>
                                </div>
                                <div class="dz-text">
                                    <div class="fw-semibold">Tarik & lepas file ke sini</div>
                                    <div class="text-muted small">atau</div>
                                    <button type="button" class="btn btn-sm btn-outline-secondary mt-2" id="btnPilihFile">
                                        Pilih File
                                    </button>
                                </div>

                                <div class="dz-meta small text-muted mt-2">
                                    Format yang didukung: JPG, JPEG, PNG, PDF, DOC, DOCX, XLS, XLSX, MP4, ZIP.
                                    Maks. ukuran per file 20 MB.
                                </div>
                            </div>

                            <!-- Preview nama file -->
                            <div id="filePreview" class="mt-2 d-none">
                                <div class="small text-muted mb-1">File dipilih:</div>
                                <div class="border rounded p-2 bg-white d-flex align-items-center justify-content-between">
                                    <span id="fileName" class="text-truncate me-3"></span>
                                    <button type="button" class="btn btn-sm btn-outline-danger" id="btnHapusFile">
                                        <i class="bi bi-x-circle"></i> Hapus
                                    </button>
                                </div>
                            </div>

                            <!-- Progress (opsional, aktif saat upload) -->
                            <div class="progress mt-3 d-none" id="uploadProgressWrap" style="height:8px;">
                                <div class="progress-bar" id="uploadProgressBar" role="progressbar" style="width: 0%;"></div>
                            </div>

                            <div class="d-flex gap-2 mt-3">
                                <button type="submit" class="btn btn-success rounded-pill px-4" id="btnUpload" disabled>
                                    Upload
                                </button>
                                <button type="button" class="btn btn-outline-secondary rounded-pill px-4" id="btnResetUpload" disabled>
                                    Reset
                                </button>
                            </div>
                        </form>
                    </div>
                    <!-- Kolom kanan: ringkasan klarifikasi -->
                    <div class="col-12 col-lg-6">
                        <label class="form-label fw-semibold">Ringkasan Klarifikasi</label>
                        <textarea id="txtKlarifikasi"
                                  class="form-control"
                                  rows="6"
                                  placeholder="Tulis klarifikasi keseluruhan di sini...">@Model.Klarifikasi</textarea>
                        <small class="text-muted d-block mt-1">
                            Catatan ini akan ikut tersimpan ketika Anda menekan tombol <em>Submit</em> atau <em>Reject</em>.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (statusNorm == "APPROVE_PPN" || statusNorm == "APPROVE_CBI" || statusNorm == "REJECT_CBI" || statusNorm == "APPROVE" || statusNorm == "APPROVE")
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="section-title mb-0">Dokumen Klarifikasi</div>
                    <span class="badge rounded-pill bg-light text-dark">
                        @(string.IsNullOrWhiteSpace(ViewBag.KlfAttachmentsJson) || ViewBag.KlfAttachmentsJson == "[]"
                            ? "0 file"
                            : "Lampiran tersedia")
                    </span>
                </div>

                @if (string.IsNullOrWhiteSpace(ViewBag.KlfAttachmentsJson) || ViewBag.KlfAttachmentsJson == "[]")
                {
                    <div class="text-muted">Belum ada dokumen klarifikasi yang diunggah.</div>
                }
                else
                {
                    <div id="klarifikasiMedia" class="thumb-grid" data-items='@Html.Raw(ViewBag.KlfAttachmentsJson)'></div>
                    <div class="thumb-note">Klik gambar/video untuk melihat ukuran penuh. File non-media akan dibuka di tab baru.</div>
                }
            </div>
        </div>
    }

    @if (statusNorm == "APPROVE_CBI" || statusNorm == "REJECT_CBI" || statusNorm == "APPROVE")
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="section-title">Klarifikasi</div>
                <div class="border rounded p-3 bg-light">
                    @Html.Raw(string.IsNullOrWhiteSpace(Model.Klarifikasi) ? "-" : Model.Klarifikasi.Replace("\n", "<br />"))
                </div>
            </div>
        </div>
    }

    @if (Model.IsBanding)
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="section-title">Perubahan (Banding)</div>
                <div class="row g-3">
                    <div class="col-12 col-md-6">
                        <div class="label">Sebelum Revisi</div>
                        <div class="border rounded p-3 bg-light">
                            @Html.Raw(string.IsNullOrWhiteSpace(@Model.SebelumRevisi) ? "-" : @Model.SebelumRevisi.Replace("\n", "<br />"))
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="label">Sesudah Revisi</div>
                        <div class="border rounded p-3 bg-light">
                            @Html.Raw(string.IsNullOrWhiteSpace(@Model.SesudahRevisi) ? "-" : @Model.SesudahRevisi.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- History Approval -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">History Approval</div>

            @if (approvalHistory == null || !approvalHistory.Any())
            {
                <div class="text-muted">Belum ada riwayat approval.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-sm align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 180px;">Tanggal</th>
                                <th style="width: 240px;">Stage</th>
                                <th style="width: 130px;">Status</th>
                                <th style="width: 220px;">Approved By</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var h in approvalHistory.OrderByDescending(x => x.ApprovedDate))
                            {
                                var st = ((h.Status ?? "").Trim().ToUpperInvariant());
                                var badge = "secondary";
                                if (st == "APPROVE") badge = "success";
                                else if (st == "REJECT") badge = "danger";

                                var fs = (h is dynamic) ? (string)h.feedback_status : h.feedback_status;

                                <tr>
                                    <td>@(h.ApprovedDate.ToString("dd/MM/yyyy HH:mm") ?? "-")</td>
                                    <td><span class="fw-semibold">@stageText(fs)</span></td>
                                    <td><span class="badge bg-@badge">@h.Status</span></td>
                                    <td>@(string.IsNullOrWhiteSpace(h.ApprovedBy) ? "-" : h.ApprovedBy)</td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            }
        </div>
    </div>

    <!-- Tombol aksi -->
    @if (canShowActionsContainer)
    {
        <div class="d-flex flex-wrap gap-2 align-items-center mb-4">
            <a asp-controller="Banding" asp-action="Index"
               class="btn btn-outline-secondary rounded-pill px-4 py-2 shadow-sm hover-scale">
                <i class="bi bi-arrow-left-circle"></i> Kembali
            </a>

            @* STEP 1 (SBM) *@
            @if (statusNorm == "UNDER_REVIEW" && hasApproveRoleSBM && feedbackTypeNorm != "COMPLAINT")
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2" @(AllPointsProcessedCurrentStage ? "" : "disabled")>
                        <i class="bi bi-check-circle"></i> Submit
                    </button>
                </form>

                <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }
            @* STEP 2 (PPN) *@
            @if (statusNorm == "APPROVE_SBM" && hasApproveRolePPN && feedbackTypeNorm != "COMPLAINT")
            {
                @if (AllPointsProcessedCurrentStage)
                {
                    <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="klarifikasi" value="" />
                        <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2">
                            <i class="bi bi-check-circle"></i> Submit
                        </button>
                    </form>

                    <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="klarifikasi" value="" />
                        <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                            <i class="bi bi-x-circle"></i> Reject
                        </button>
                    </form>
                }

                <form asp-action="BypassApprovePpn" method="post" class="d-inline"
                      onsubmit="return confirm('Yakin melakukan BYPASS? Item BANDING akan langsung di revisi oleh PT Citrabuana Indoloka');">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="notes" value="Bypass oleh PPN" />
                    <button type="submit" class="btn btn-warning rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-fast-forward-circle"></i> Bypass Approve (PPN)
                    </button>
                </form>
            }
            @* STEP 3 (CBI) *@
            @if (statusNorm == "APPROVE_PPN" && hasRoleCBI && feedbackTypeNorm != "COMPLAINT")
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit"
                            class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2">
                        <i class="bi bi-check-circle"></i> Submit
                    </button>
                </form>

                <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }

            @* STEP 4 (PERTAMINA) *@
            @if ((statusNorm == "APPROVE_CBI" || statusNorm == "REJECT_CBI") && hasRolePertamina)
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="button"
                            class="btn btn-gradient-blue rounded-pill px-4 py-2 shadow-sm hover-scale"
                            data-bs-toggle="modal" data-bs-target="#confirmModal">
                        <i class="bi bi-arrow-repeat"></i> Direvisi
                    </button>
                </form>

                <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }

            @if ((statusNorm == "APPROVE" || statusNorm == "BYPASS_APPROVE_PPN") && hasRoleCBI)
            {
                <button type="button"
                        class="btn btn-warning rounded-pill px-4 py-2 shadow-sm hover-scale"
                        data-bs-toggle="modal" data-bs-target="#reassignApprovedModal">
                    <i class="bi bi-arrow-counterclockwise"></i> Reassign
                </button>
            }

        </div>
    }
</div>

@* ================== BEGIN: Modal Preview Lampiran ================== *@
<!-- Modal Konfirmasi -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Persetujuan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah anda yakin ingin merevisi laporan audit ini oleh PT Citrabuana Indoloka ?
            </div>
            <div class="modal-footer">
                <form method="post"
                      asp-controller="Banding"
                      asp-action="SubmitFinalApproval"
                      asp-route-id="@Model.Id"
                      class="needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Ya, Setujui</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Full Size Media (SATU KALI SAJA) -->
<div class="modal fade" id="fullSizeMediaModal" tabindex="-1" aria-labelledby="fullSizeMediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body p-0 position-relative" id="fullSizeMediaModalBody">
                <!-- Full size media will be inserted here -->
            </div>
            <div class="modal-footer justify-content-end">
                <button type="button" class="btn btn-primary" id="useMediaBtn" style="display: none;">
                    Gunakan media ini
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Reassign (khusus status APPROVED) -->
<div class="modal fade" id="reassignApprovedModal" tabindex="-1" aria-labelledby="reassignApprovedModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reassignApprovedModalLabel">Konfirmasi Reassign</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin melakukan <strong>Reassign</strong> tiket ini?
            </div>
            <div class="modal-footer">
                <form method="post"
                      asp-controller="Banding"
                      asp-action="Reassign"
                      asp-route-id="@Model.Id"
                      class="needs-klarifikasi-approved">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-warning">Ya, Reassign</button>
                </form>
            </div>
        </div>
    </div>
</div>
@* ================== END: Modal Preview Lampiran ================== *@

@section Scripts {
    <script>
        document.getElementById("formUploadKlarifikasi").addEventListener("submit", function (e) {
    e.preventDefault(); // cegah reload

    const formData = new FormData(this);
    const btnUpload = document.getElementById("btnUpload");
    btnUpload.disabled = true;
    btnUpload.innerText = "Uploading...";

    fetch(this.action, {
        method: "POST",
        body: formData
    })
    .then(res => res.json())
    .then(data => {
        alert("Upload berhasil!");
        // reset hanya bagian file, jangan form lain
        document.getElementById("KlarifikasiFile").value = "";
        document.getElementById("filePreview").classList.add("d-none");
        btnUpload.disabled = false;
        btnUpload.innerText = "Upload";
    })
    .catch(err => {
        console.error(err);
        alert("Upload gagal");
        btnUpload.disabled = false;
        btnUpload.innerText = "Upload";
    });
});

        // ========== Utils ==========
        function pick(obj, ...keys){
            for (const k of keys){
                if (obj && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, k)){
                    const v = obj[k];
                    if (v !== null && v !== undefined && v !== '') return v;
                }
            }
            return '';
        }

        function toSrc(item){
            if (typeof item === 'string') return item;
            const raw = pick(item, 'MediaPath', 'mediaPath', 'media_path', 'Url', 'URL', 'url', 'Path', 'path', 'Href', 'href');
            return raw || '';
        }

        function toType(item){
            if (typeof item === 'string') return item.toLowerCase().endsWith('.mp4') ? 'VIDEO' : 'IMAGE';
            return (pick(item, 'MediaType', 'mediaType', 'media_type', 'type') || '').toUpperCase();
        }

        function safeUrl(u){ try{ return encodeURI(u); } catch{ return u || ''; } }

        function normalizeItems(items){
            try {
                if (items == null) return [];
                if (typeof items === 'string') {
                    const parsed = JSON.parse(items);
                    return Array.isArray(parsed) ? parsed : (parsed ? [parsed] : []);
                }
                return Array.isArray(items) ? items : [items];
            } catch { return []; }
        }

        // ========== Fullscreen Modal Viewer ==========
        function openFullSizeMedia(src, type){
            const body = document.getElementById('fullSizeMediaModalBody');
            body.innerHTML = '';
            if ((type || '').toUpperCase() === 'VIDEO' || src.toLowerCase().endsWith('.mp4')) {
                body.innerHTML = `<video controls autoplay class="d-block w-100 h-100" style="max-height:100vh;object-fit:contain">
                    <source src="${src}" type="video/mp4">
                </video>`;
            } else {
                body.innerHTML = `<img src="${src}" class="d-block w-100 h-100" style="object-fit:contain" alt="">`;
            }

            new bootstrap.Modal(document.getElementById('fullSizeMediaModal'), {
                backdrop: 'static',
                keyboard: true,
                focus: true
            }).show();
        }

        // ========== Thumbnail Renderer ==========
        function renderAttachmentThumbs(targetId, mediaItems){
            const host = document.getElementById(targetId);
            if (!host) return;
            host.innerHTML = '';

            const list = normalizeItems(mediaItems);
            if (list.length === 0){
                host.innerHTML = '<div class="text-muted">Tidak ada dokumen pendukung.</div>';
                return;
            }

            list.forEach(it => {
                const srcRaw = toSrc(it);
                const src = safeUrl((srcRaw || '').trim());
                if (!src) return;

                const t = toType(it);
                const ext = src.toLowerCase().split('.').pop();

                const isImage = ['jpg', 'jpeg', 'png'].includes(ext);
                const isVideo = t === 'VIDEO' || src.toLowerCase().endsWith('.mp4');

                const wrap = document.createElement('div');
                wrap.className = 'thumb';

                if (isImage || isVideo){
                    wrap.title = isVideo ? 'Putar video' : 'Lihat gambar';
                    wrap.onclick = () => openFullSizeMedia(src, t);
                    wrap.innerHTML = isVideo
                      ? `<video muted playsinline preload="metadata"><source src="${src}#t=0.1" type="video/mp4"></video><div class="play"><i class="bi bi-play-fill"></i></div>`
                      : `<img src="${src}" alt="">`;
                } else {
                    const filename = (it.FileName || src.split('/').pop() || 'dokumen').replace(/"/g, '');
                    wrap.title = 'Klik untuk unduh';
                    wrap.onclick = () => window.open(src, '_blank');
                    wrap.innerHTML = `<div class="d-flex justify-content-center align-items-center h-100 w-100 bg-light text-dark fw-semibold text-center" style="font-size:.85rem;padding:.25rem;">${filename}</div>`;
                }

                host.appendChild(wrap);
            });
        }

        // ========== Auto-render semua grid ==========
        function renderAllThumbGrids(){
            document.querySelectorAll('.thumb-grid').forEach(el => {
                const data = el.getAttribute('data-items'); // JSON string
                renderAttachmentThumbs(el.id, data);
            });
        }

        if (document.readyState === 'loading'){
            document.addEventListener('DOMContentLoaded', renderAllThumbGrids);
        } else {
            renderAllThumbGrids();
        }

        // ========== Klarifikasi binder ==========
        (function(){
            const txtKlarifikasi = document.getElementById('txtKlarifikasi');
            function getKlarifikasi(){ return (txtKlarifikasi && typeof txtKlarifikasi.value === 'string') ? txtKlarifikasi.value.trim() : ''; }
            document.addEventListener('submit', function(ev){
                const form = ev.target;
                if (!form || !form.classList || !form.classList.contains('needs-klarifikasi')) return;
                const hidden = form.querySelector('input[name="klarifikasi"]');
                if (hidden) hidden.value = getKlarifikasi();
            }, true);
        })();

              (function(){
          const dz = document.getElementById('dropzoneKlarifikasi');
          const input = document.getElementById('KlarifikasiFile');
          const btnPick = document.getElementById('btnPilihFile');
          const btnDel = document.getElementById('btnHapusFile');
          const btnUpload = document.getElementById('btnUpload');
          const btnReset = document.getElementById('btnResetUpload');
          const filePrevWrap = document.getElementById('filePreview');
          const fileNameEl = document.getElementById('fileName');
          const form = document.getElementById('formUploadKlarifikasi');
          const progWrap = document.getElementById('uploadProgressWrap');
          const progBar = document.getElementById('uploadProgressBar');

          if (!dz) return;

          const MAX_SIZE = 20 * 1024 * 1024; // 20 MB
          const ACCEPT = ['jpg','jpeg','png','pdf','doc','docx','xls','xlsx','mp4','zip'];

          function extOf(name){
            const p = (name || '').toLowerCase().split('.');
            return p.length > 1 ? p.pop() : '';
          }

          function setFile(file){
            if (!file){ clearFile(); return; }
            // Validasi
            const ext = extOf(file.name);
            if (!ACCEPT.includes(ext)){
              alert('Format file tidak didukung.');
              clearFile();
              return;
            }
            if (file.size > MAX_SIZE){
              alert('Ukuran file melebihi 20 MB.');
              clearFile();
              return;
            }

            fileNameEl.textContent = file.name + ' (' + (file.size/1024/1024).toFixed(2) + ' MB)';
            filePrevWrap.classList.remove('d-none');
            btnUpload.disabled = false;
            btnReset.disabled = false;
          }

          function clearFile(){
            input.value = '';
            filePrevWrap.classList.add('d-none');
            fileNameEl.textContent = '';
            btnUpload.disabled = true;
            btnReset.disabled = true;
            progWrap.classList.add('d-none');
            progBar.style.width = '0%';
          }

          // klik pilih file
          btnPick?.addEventListener('click', () => input.click());
          // hapus file
          btnDel?.addEventListener('click', clearFile);
          btnReset?.addEventListener('click', clearFile);

          // perubahan dari input
          input?.addEventListener('change', (e) => {
            const f = e.target.files && e.target.files[0];
            setFile(f);
          });

          // drag & drop
          ;['dragenter','dragover'].forEach(ev => {
            dz.addEventListener(ev, (e)=>{ e.preventDefault(); e.stopPropagation(); dz.classList.add('dragover'); });
          });
          ;['dragleave','drop'].forEach(ev => {
            dz.addEventListener(ev, (e)=>{ e.preventDefault(); e.stopPropagation(); dz.classList.remove('dragover'); });
          });
          dz.addEventListener('drop', (e)=>{
            const f = e.dataTransfer?.files && e.dataTransfer.files[0];
            if (f){
              // set ke input file
              const dt = new DataTransfer();
              dt.items.add(f);
              input.files = dt.files;
              setFile(f);
            }
          });

          // Progress (tanpa AJAX khusus, tampilkan dummy progres agar ada feedback)
          form?.addEventListener('submit', ()=>{
            // jika ingin real progress, perlu upload via XHR/fetch
            progWrap.classList.remove('d-none');
            progBar.style.width = '60%';
            setTimeout(()=> progBar.style.width = '90%', 700);
          });
        })();
    </script>
}
