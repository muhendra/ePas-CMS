@inject e_Pas_CMS.Data.EpasDbContext _context
@using System.Security.Claims
@using Newtonsoft.Json
@using System

@model e_Pas_CMS.ViewModels.ComplainDetailViewModel
@{
    ViewData["Title"] = Model.IsBanding ? "Detail Banding" : "Detail Komplain";

    var statusNorm = (Model.StatusCode ?? "").Trim().ToUpperInvariant();
    var feedbackTypeNorm = (Model.feedback_type ?? "").Trim().ToUpperInvariant();

    string statusClass = "bg-warning";
    string statusText = Model.StatusText ?? "-";
    switch (statusNorm)
    {
        case "APPROVED":
        case "APPROVE": statusClass = "bg-success"; break;
        case "REJECTED":
        case "REJECT_CBI":
            statusClass = "bg-danger";
            break;
        default: statusClass = "bg-warning"; break;
    }

    var userIdString = Context.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

    bool hasApproveRoleSBM = false;
    bool hasApproveRolePPN = false;
    bool hasRoleCBI = false;
    bool hasRolePertamina = false;

    if (!string.IsNullOrEmpty(userIdString))
    {
        var wanted = new[] { "SBM", "PPN", "CBI", "PERTAMINA" };
        var roleSet = new HashSet<string>(
            (from ur in _context.app_user_roles
             join r in _context.app_roles on ur.app_role_id equals r.id
             where ur.app_user_id == userIdString && wanted.Contains(r.name.ToUpper())
             select r.name.ToUpper()).ToList()
        );

        hasApproveRoleSBM = roleSet.Contains("SBM");
        hasApproveRolePPN = roleSet.Contains("PPN");
        hasRoleCBI = roleSet.Contains("CBI");
        hasRolePertamina = roleSet.Contains("PERTAMINA");
    }

    // helper normalisasi string
    Func<string, string> norm = s => (s ?? "").Trim().ToUpperInvariant();

    // ===== STRICT per-stage AllPointsApproved (tidak cascade) + override REJECTED utk Pertamina =====
    bool AllPointsApprovedCurrentStage =
        (norm(statusNorm) == "REJECT_CBI" && hasRolePertamina)
        ||
        (
            Model?.Points != null && Model.Points.Any() &&
            Model.Points.All(p =>
                p?.History != null && p.History.Any(h =>
                    norm(h.StatusCode) == norm(statusNorm) &&
                    (norm(h.Status) == "APPROVED" || norm(h.Status) == "APPROVE")
                )
            )
        );

    // Pembungkus container aksi
    var canShowActionsContainer =
        AllPointsApprovedCurrentStage
        || norm(statusNorm) == "APPROVE_PPN"
        || norm(statusNorm) == "APPROVE_CBI"
        || norm(statusNorm) == "APPROVED"
        || (hasRolePertamina && norm(statusNorm) == "REJECT_CBI"); // safety ekstra

    // Ambil history dari ViewBag (cast sesuai namespace entity kamu)
    var approvalHistory = ViewBag.ApprovalHistory as IEnumerable<e_Pas_CMS.Models.TrxFeedbackPointApproval>;

    // mapper "case when" -> label Indonesia untuk feedback_status
    Func<string, string> stageText = s =>
    {
        var v = (s ?? "").Trim().ToUpperInvariant();
        return v switch
        {
            "UNDER_REVIEW" => "Menunggu Persetujuan SBM",
            "APPROVE_SBM" => "Menunggu Persetujuan PPN",
            "APPROVE_PPN" => "Menunggu Persetujuan CBI",
            "APPROVE_CBI" => "Menunggu Persetujuan Pertamina",
            "APPROVED" => "Banding Disetujui",
            "REJECTED" => "Ditolak",
            "REJECT_CBI" => "Ditolak",
            _ => s ?? "-"
        };
    };
}

<style>
    .card-soft {
        border: 1px solid #eef2f7;
        border-radius: .75rem;
    }

    .section-title {
        font-weight: 600;
        font-size: 1.05rem;
        margin-bottom: .75rem;
    }

    .kv .label {
        color: #6b7280;
        font-size: .85rem;
    }

    .kv .value {
        font-weight: 500;
    }

    .banner-status {
        border-radius: .75rem;
        text-align: center;
        padding: .95rem 1rem;
    }

    .muted {
        color: #6b7280;
    }

    .min-h-row {
        min-height: 28px;
    }

    .table-sm th, .table-sm td {
        vertical-align: middle;
    }

    .point-title {
        font-weight: 600;
        margin-bottom: .5rem;
    }

    .divider {
        height: 1px;
        background: #eef2f7;
        margin: 1rem 0;
    }

    .btn-gradient-green {
        background: linear-gradient(135deg,#10b981,#059669);
        color: #fff;
        border: none;
    }

    .btn-gradient-green:hover {
        background: linear-gradient(135deg,#059669,#047857);
        color: #fff;
    }

    .btn-gradient-red {
        background: linear-gradient(135deg,#ef4444,#dc2626);
        color: #fff;
        border: none;
    }

    .btn-gradient-red:hover {
        background: linear-gradient(135deg,#dc2626,#b91c1c);
        color: #fff;
    }

    .btn-gradient-blue {
        background: linear-gradient(135deg,#3b82f6,#2563eb);
        color: #fff;
        border: none;
    }

    .btn-gradient-blue:hover {
        background: linear-gradient(135deg,#2563eb,#1d4ed8);
        color: #fff;
    }

    .hover-scale {
        transition: transform .2s, box-shadow .2s;
    }

    .hover-scale:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0,0,0,.15);
    }

    .thumb-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 1rem;
    }

    .thumb {
        position: relative;
        width: 140px;
        height: 100px;
        overflow: hidden;
        border: 1px solid #ccc;
        border-radius: 6px;
        cursor: pointer;
    }

    .thumb img, .thumb video {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .thumb .play {
        position: absolute;
        top: 35%;
        left: 35%;
        color: #fff;
        font-size: 2rem;
    }

    .thumb-grid .text-muted {
        padding: .5rem 0;
        font-style: italic;
        color: #6c757d;
    }
</style>

<div class="container-fluid px-0">
    <!-- Breadcrumb + Title -->
    <div class="mb-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb small mb-1">
                <li class="breadcrumb-item"><a asp-controller="Banding" asp-action="Index">Banding</a></li>
                <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
            </ol>
        </nav>
        <h4 class="mb-0">@ViewData["Title"]</h4>
    </div>

    <!-- Status Banner -->
    @if (feedbackTypeNorm != "COMPLAINT")
    {
        <div class="mb-3">
            <div class="banner-status @statusClass text-white">
                <h4 class="fw-bold mb-0">@statusText</h4>
            </div>
        </div>
    }

    <!-- Informasi SPBU -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi SPBU</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col"><div class="label">Nomor SPBU</div><div class="value min-h-row">@Model.NoSpbu</div></div>
                <div class="col"><div class="label">Region</div><div class="value min-h-row">@Model.Region</div></div>
                <div class="col"><div class="label">Kabupaten/Kota</div><div class="value min-h-row">@Model.City</div></div>
                <div class="col"><div class="label">Alamat SPBU</div><div class="value min-h-row">@Model.Address</div></div>
            </div>
        </div>
    </div>

    <!-- Informasi Kegiatan Audit -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi Kegiatan Audit</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                <div class="col"><div class="label">No. Report</div><div class="value">@Model.ReportNo</div></div>
                <div class="col"><div class="label">Tanggal Audit</div><div class="value">@(Model.TanggalAudit.HasValue ? Model.TanggalAudit.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
                <div class="col"><div class="label">Sent Date</div><div class="value">@(Model.SentDate.HasValue ? Model.SentDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
                <div class="col"><div class="label">Verifikator</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Verifikator) ? Model.Verifikator : "-")</div></div>
                <div class="col"><div class="label">Auditor 1</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor1) ? Model.Auditor1 : "-")</div></div>
                <div class="col"><div class="label">Auditor 2</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Auditor2) ? Model.Auditor2 : "-")</div></div>
                <div class="col"><div class="label">Tipe Audit</div><div class="value">@Model.TipeAudit</div></div>
                <div class="col"><div class="label">Next Audit</div><div class="value">@Model.NextAudit</div></div>
                <div class="col"><div class="label">Ko-ordinator</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.Koordinator) ? Model.Koordinator : "-")</div></div>
            </div>
        </div>
    </div>

    <!-- Informasi Banding/Komplain -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">Informasi @(Model.IsBanding ? "Banding" : "Komplain")</div>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-3 kv">
                @if (feedbackTypeNorm != "COMPLAINT")
                {
                    <div class="col">
                        <div class="label">Status @(Model.IsBanding ? "Banding" : "Komplain")</div>
                        <div class="value">@statusText</div>
                    </div>
                }
                <div class="col"><div class="label">Nomor Tiket</div><div class="value">@Model.TicketNo</div></div>
                <div class="col"><div class="label">Nomor Banding</div><div class="value">@(!string.IsNullOrWhiteSpace(Model.NomorBanding) ? Model.NomorBanding : "-")</div></div>
                <div class="col"><div class="label">Tgl Pengajuan</div><div class="value">@(Model.CreatedDate.HasValue ? Model.CreatedDate.Value.ToString("dd/MM/yyyy, HH:mm") + " WIB" : "-")</div></div>
            </div>
        </div>
    </div>


    <!-- Daftar Poin -->
    @if (Model.Points != null && Model.Points.Any())
    {
        var idx = 1;
        foreach (var p in Model.Points)
        {
            var thumbsId = $"thumbs_{idx}";

            // per-poin approved di tahap SAAT INI (strict)
            bool pointApprovedThisStage = p?.History != null && p.History.Any(h =>
            {
                var sc = (h.StatusCode ?? "").Trim().ToUpperInvariant();
                var st = (h.Status ?? "").Trim().ToUpperInvariant();
                return sc == statusNorm && (st == "APPROVED" || st == "APPROVE");
            });

            <div class="card card-soft mb-3">
                <div class="card-body">
                    <div class="point-title">Poin @idx</div>

                    <div class="table-responsive mb-3">
                        <table class="table table-sm align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width:140px">Element</th>
                                    <th style="width:160px">Sub Element</th>
                                    <th style="width:180px">Detail Element</th>
                                    <th>Element yang @(Model.IsBanding ? "dibanding" : "dikomplain")</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@(string.IsNullOrWhiteSpace(p.Element) ? "-" : p.Element)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.SubElement) ? "-" : p.SubElement)</td>
                                    <td>@(string.IsNullOrWhiteSpace(p.DetailElement) ? "-" : p.DetailElement)</td>
                                    <td>@Html.Raw(string.IsNullOrWhiteSpace(p.DetailDibantah) ? "-" : p.DetailDibantah.Replace("\n", "<br />"))</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @* Tombol Approve/Reject hanya muncul bila POIN ini BELUM approved di tahap SAAT INI *@
                    @if (!pointApprovedThisStage && (
                   (statusNorm == "UNDER_REVIEW" && hasApproveRoleSBM) ||
                   (statusNorm == "APPROVE_SBM" && hasApproveRolePPN)
                   @* || (statusNorm == "APPROVE_PPN" && hasRoleCBI) *@
                    ))
                    {
                        <div class="mt-3 d-flex gap-2">
                            <form asp-action="ApprovePoint" asp-route-id="@p.PointId" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-success">
                                    <i class="bi bi-check-circle"></i> Approve
                                </button>
                            </form>
                            <form asp-action="RejectPoint" asp-route-id="@p.PointId" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="bi bi-x-circle"></i> Reject
                                </button>
                            </form>
                        </div>
                    }

                    @* Riwayat approval hanya untuk tahap saat ini *@
                    @if (p.History != null && p.History.Any())
                    {
                        var filtered = p.History.Where(x => (x.StatusCode ?? "").Trim().ToUpperInvariant() == statusNorm).ToList();
                        if (filtered.Any())
                        {
                            <div class="mt-2 small text-muted">
                                <strong>Riwayat Approval (Tahap @statusNorm):</strong>
                                <ul class="mb-0 ps-3">
                                    @foreach (var h in filtered)
                                    {
                                        <li>@h.ApprovedDate.ToString("dd/MM/yyyy HH:mm") - <strong>@h.Status</strong> oleh @h.ApprovedBy</li>
                                    }
                                </ul>
                            </div>
                        }
                    }

                    <div class="mb-2 fw-semibold">Isi @(Model.IsBanding ? "Banding" : "Komplain")</div>
                    <div class="muted mb-3">@(string.IsNullOrWhiteSpace(p.Description) ? "-" : p.Description)</div>
                    <div class="label">Dokumen Pendukung</div>
                    @if (string.IsNullOrWhiteSpace(ViewBag.AttachmentsJson) || ViewBag.AttachmentsJson == "[]")
                    {
                        <div class="text-muted">Tidak ada dokumen pendukung.</div>
                    }
                    else
                    {
                        <div id="@thumbsId" class="thumb-grid" data-items='@Html.Raw(ViewBag.AttachmentsJson)'></div>
                    }
                </div>
            </div>
            idx++;
        }
    }

    @if (statusNorm == "APPROVE_PPN" && hasRoleCBI)
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="section-title">Klarifikasi (Diisi oleh User CBI)</div>
                <p class="text-muted mb-2">
                    Masukkan ringkasan klarifikasi untuk <strong>keseluruhan</strong> komplain/banding ini.
                </p>
                <textarea id="txtKlarifikasi"
                          class="form-control"
                          rows="4"
                          placeholder="Tulis klarifikasi di sini...">@Model.Klarifikasi</textarea>
                <small class="text-muted">Klarifikasi ini akan ikut tersimpan saat Anda menekan tombol Approve/Reject.</small>
            </div>
        </div>
    }

    <!-- History Approval -->
    <div class="card card-soft mb-3">
        <div class="card-body">
            <div class="section-title">History Approval</div>

            @if (approvalHistory == null || !approvalHistory.Any())
            {
                <div class="text-muted">Belum ada riwayat approval.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-sm align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 180px;">Tanggal</th>
                                <th style="width: 240px;">Stage</th>
                                <th style="width: 130px;">Status</th>
                                @* <th>Notes</th> *@
                                <th style="width: 220px;">Approved By</th>
                                @* <th style="width: 260px;">Point ID</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var h in approvalHistory.OrderByDescending(x => x.ApprovedDate))
                            {
                                var st = ((h.Status ?? "").Trim().ToUpperInvariant());
                                var badge = "secondary";
                                if (st == "APPROVED" || st == "APPROVE") badge = "success";
                                else if (st == "REJECTED") badge = "danger";

                                // ambil feedback_status
                                var fs = (h is dynamic) ? (string)h.feedback_status : h.feedback_status;

                                <tr>
                                    <td>@(h.ApprovedDate.ToString("dd/MM/yyyy HH:mm") ?? "-")</td>
                                    <td>
                                        <span class="fw-semibold">@stageText(fs)</span>
                                    </td>
                                    <td><span class="badge bg-@badge">@h.Status</span></td>
                                    @* <td>@(string.IsNullOrWhiteSpace(h.Notes) ? "-" : h.Notes)</td> *@
                                    <td>@(string.IsNullOrWhiteSpace(h.ApprovedBy) ? "-" : h.ApprovedBy)</td>
                                    @* <td class="text-monospace">@h.TrxFeedbackPointId</td> *@
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            }
        </div>
    </div>

    @if (statusNorm == "APPROVE_CBI" || statusNorm == "REJECT_CBI")
    {
        <div class="card card-soft mb-3">
            <div class="card-body">
                <div class="section-title">Klarifikasi</div>
                <div class="border rounded p-3 bg-light">
                    @Html.Raw(string.IsNullOrWhiteSpace(Model.Klarifikasi) ? "-" : Model.Klarifikasi.Replace("\n", "<br />"))
                </div>
            </div>
        </div>
    }

    <!-- Tombol aksi -->
    @if (canShowActionsContainer)
    {
        <div class="d-flex flex-wrap gap-2 align-items-center mb-4">
            <a asp-controller="Banding" asp-action="Index"
               class="btn btn-outline-secondary rounded-pill px-4 py-2 shadow-sm hover-scale">
                <i class="bi bi-arrow-left-circle"></i> Kembali
            </a>

            @* STEP 1 (SBM) *@
            @if (statusNorm == "UNDER_REVIEW" && hasApproveRoleSBM && feedbackTypeNorm != "COMPLAINT")
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2" @(AllPointsApprovedCurrentStage ? "" : "disabled")>
                        <i class="bi bi-check-circle"></i> Submit
                    </button>
                </form>
            }

            @* STEP 2 (PPN) *@
            @if (statusNorm == "APPROVE_SBM" && hasApproveRolePPN && feedbackTypeNorm != "COMPLAINT")
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2" @(AllPointsApprovedCurrentStage ? "" : "disabled")>
                        <i class="bi bi-check-circle"></i> Submit
                    </button>
                </form>
            }

            @* STEP 3 (CBI) *@
            @if (statusNorm == "APPROVE_PPN" && hasRoleCBI && feedbackTypeNorm != "COMPLAINT")
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit"
                            class="btn btn-gradient-green rounded-pill px-4 py-2 shadow-sm hover-scale me-2"
                    @(statusNorm == "APPROVE_PPN" ? "" : (AllPointsApprovedCurrentStage ? "" : "disabled"))>
                        <i class="bi bi-check-circle"></i> Submit
                    </button>
                </form>

                <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }


            @* STEP 4 (PERTAMINA) — tampil saat APPROVE_CBI **atau** REJECTED *@
            @if ((statusNorm == "APPROVE_CBI" || statusNorm == "REJECT_CBI") && hasRolePertamina)
            {
                <form asp-action="Approve" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="button"
                            class="btn btn-gradient-blue rounded-pill px-4 py-2 shadow-sm hover-scale"
                            data-bs-toggle="modal" data-bs-target="#confirmModal">
                        <i class="bi bi-arrow-repeat"></i> Direvisi
                    </button>
                </form>

                <form asp-action="Reject" method="post" class="d-inline needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="klarifikasi" value="" />
                    <button type="submit" class="btn btn-gradient-red rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }

            @* REASSIGN saat APPROVED (tanpa syarat role) *@
            @if (statusNorm == "APPROVED" && hasRoleCBI)
            {
                <button type="button"
                        class="btn btn-warning rounded-pill px-4 py-2 shadow-sm hover-scale"
                        data-bs-toggle="modal" data-bs-target="#reassignApprovedModal">
                    <i class="bi bi-arrow-counterclockwise"></i> Reassign
                </button>
            }
        </div>
    }
</div>

@* ================== BEGIN: Modal Preview Lampiran ================== *@
<!-- Modal Konfirmasi -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Persetujuan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin mengembalikan laporan audit ini?
            </div>
            <div class="modal-footer">
                <form method="post"
                      asp-controller="Banding"
                      asp-action="SubmitFinalApproval"
                      asp-route-id="@Model.Id"
                      class="needs-klarifikasi">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="klarifikasi" value="" /> @* diisi via JS *@
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Ya, Setujui</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Media -->
<div class="modal fade" id="mediaModal" tabindex="-1" aria-labelledby="mediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mediaModalLabel">Dokumentasi Foto / Video</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body" id="mediaModalBody">
                <!-- Media will be inserted here -->
            </div>
        </div>
    </div>
</div>

<!-- Modal Full Size Media -->
<div class="modal fade" id="fullSizeMediaModal" tabindex="-1" aria-labelledby="fullSizeMediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body p-0 position-relative" id="fullSizeMediaModalBody">
                <!-- Full size media will be inserted here -->
            </div>
            <div class="modal-footer justify-content-end">
                <button type="button" class="btn btn-primary" id="useMediaBtn" style="display: none;">
                    Gunakan media ini
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Reassign (khusus status APPROVED) -->
<div class="modal fade" id="reassignApprovedModal" tabindex="-1" aria-labelledby="reassignApprovedModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reassignApprovedModalLabel">Konfirmasi Reassign</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin melakukan <strong>Reassign</strong> tiket ini?
            </div>
            <div class="modal-footer">
                <form method="post"
                      asp-controller="Banding"
                      asp-action="Reassign"
                      asp-route-id="@Model.Id"
                      class="needs-klarifikasi-approved">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="klarifikasi" value="" /> @* diisi via JS *@
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-warning">Ya, Reassign</button>
                </form>
            </div>
        </div>
    </div>
</div>

@* ================== END: Modal Preview Lampiran ================== *@
@section Scripts {
    <script>
        // ========== Utils ==========
        function pick(obj, ...keys){
            for (const k of keys){
                if (obj && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, k)){
                    const v = obj[k];
                    if (v !== null && v !== undefined && v !== '') return v;
                }
            }
            return '';
        }

        function toSrc(item){
            if (typeof item === 'string') return item;
            const raw = pick(item, 'MediaPath', 'mediaPath', 'media_path', 'Url', 'URL', 'url', 'Path', 'path', 'Href', 'href');
            return raw || '';
        }

        function toType(item){
            if (typeof item === 'string') return item.toLowerCase().endsWith('.mp4') ? 'VIDEO' : 'IMAGE';
            return (pick(item, 'MediaType', 'mediaType', 'media_type', 'type') || '').toUpperCase();
        }

        function safeUrl(u){ try{ return encodeURI(u); } catch{ return u || ''; } }

        function normalizeItems(items){
            try {
                if (items == null) return [];
                if (typeof items === 'string') {
                    const parsed = JSON.parse(items);
                    return Array.isArray(parsed) ? parsed : (parsed ? [parsed] : []);
                }
                return Array.isArray(items) ? items : [items];
            } catch { return []; }
        }

        // ========== Fullscreen Modal Viewer ==========
        function openFullSizeMedia(src, type){
            const body = document.getElementById('fullSizeMediaModalBody');
            body.innerHTML = '';
            if ((type || '').toUpperCase() === 'VIDEO' || src.toLowerCase().endsWith('.mp4')) {
                body.innerHTML = `<video controls autoplay class="d-block w-100 h-100" style="max-height:100vh;object-fit:contain">
                    <source src="${src}" type="video/mp4">
                </video>`;
            } else {
                body.innerHTML = `<img src="${src}" class="d-block w-100 h-100" style="object-fit:contain" alt="">`;
            }

            new bootstrap.Modal(document.getElementById('fullSizeMediaModal'), {
                backdrop: 'static',
                keyboard: true,
                focus: true
            }).show();
        }

        // ========== Thumbnail Renderer ==========
                function renderAttachmentThumbs(targetId, mediaItems){
        const host = document.getElementById(targetId);
        if (!host) return;
        host.innerHTML = '';


        const list = normalizeItems(mediaItems);
        if (list.length === 0){
        host.innerHTML = '<div class="text-muted">Tidak ada dokumen pendukung.</div>';
        return;
        }


        list.forEach(it => {
        const srcRaw = toSrc(it);
        const src = safeUrl((srcRaw || '').trim());
        if (!src) return;


        const t = toType(it);
        const ext = src.toLowerCase().split('.').pop();


        const isImage = ['jpg', 'jpeg', 'png'].includes(ext);
        const isVideo = t === 'VIDEO' || src.toLowerCase().endsWith('.mp4');


        const wrap = document.createElement('div');
        wrap.className = 'thumb';


        if (isImage || isVideo){
        wrap.title = isVideo ? 'Putar video' : 'Lihat gambar';
        wrap.onclick = () => openFullSizeMedia(src, t);
        wrap.innerHTML = isVideo
        ? `<video muted playsinline preload="metadata"><source src="${src}#t=0.1" type="video/mp4"></video><div class="play"><i class="bi bi-play-fill"></i></div>`
        : `<img src="${src}" alt="">`;
        } else {
        const filename = (it.FileName || src.split('/').pop() || 'dokumen').replace(/"/g, '');
        wrap.title = 'Klik untuk unduh';
        wrap.onclick = () => window.open(src, '_blank');
        wrap.innerHTML = `<div class="d-flex justify-content-center align-items-center h-100 w-100 bg-light text-dark fw-semibold text-center" style="font-size:.85rem;padding:.25rem;">${filename}</div>`;
        }

        host.appendChild(wrap);
        });
        }
        // ========== Auto-render semua grid ==========
        function renderAllThumbGrids(){
            document.querySelectorAll('.thumb-grid').forEach(el => {
                const data = el.getAttribute('data-items'); // JSON string
                renderAttachmentThumbs(el.id, data);
            });
        }

        if (document.readyState === 'loading'){
            document.addEventListener('DOMContentLoaded', renderAllThumbGrids);
        } else {
            renderAllThumbGrids();
        }

        // ========== Klarifikasi binder ==========
        (function(){
            const txtKlarifikasi = document.getElementById('txtKlarifikasi');
            function getKlarifikasi(){ return (txtKlarifikasi && typeof txtKlarifikasi.value === 'string') ? txtKlarifikasi.value.trim() : ''; }
            document.addEventListener('submit', function(ev){
                const form = ev.target;
                if (!form || !form.classList || !form.classList.contains('needs-klarifikasi')) return;
                const hidden = form.querySelector('input[name="klarifikasi"]');
                if (hidden) hidden.value = getKlarifikasi();
            }, true);
        })();
    </script>

    <!-- ========== Modal viewer ========= -->
    <div class="modal fade" id="fullSizeMediaModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content bg-dark">
                <div class="modal-body p-2 text-center" id="fullSizeMediaModalBody" style="min-height: 60vh;"></div>
            </div>
        </div>
    </div>
}