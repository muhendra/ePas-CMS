@using e_Pas_CMS.ViewModels
@using Newtonsoft
@model DetailAuditViewModel

@{
    ViewData["Title"] = "Detail Hasil Audit";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<h3 class="mb-4 fw-bold">Detail Hasil Audit</h3>

<div class="mb-3">
    <a href="#" class="text-decoration-none">Review Audit /</a>
    <span class="text-primary fw-semibold">Detail hasil audit - @Model.ReportNo</span>
</div>

<div class="rounded p-3 mb-4 text-center fw-bold text-white fs-4" style="background-color: #10B981;">
    @(Model.Status.ToUpper() == "PASS" ? "CERTIFIED" : Model.Status.ToUpper())
</div>

<div class="row g-4 mb-5 p-4 bg-light rounded shadow-sm">
    <div class="col-md-4">
        <strong class="d-block">No. Report</strong>
        <span>@Model.ReportNo</span>
    </div>
    <div class="col-md-4">
        <strong class="d-block">Nama Auditor</strong>
        <span>@Model.NamaAuditor</span>
    </div>
    <div class="col-md-4">
        <strong class="d-block">Tanggal Submit</strong>
        <span>@Model.TanggalSubmit?.ToString("dd/MM/yyyy, HH:mm")</span>
    </div>
    <div class="col-md-4">
        <strong class="d-block">Nomor SPBU</strong>
        <span>@Model.SpbuNo</span>
    </div>
    <div class="col-md-4">
        <strong class="d-block">Provinsi SPBU</strong>
        <span>@Model.Provinsi</span>
    </div>
    <div class="col-md-4">
        <strong class="d-block">Kabupaten/Kota SPBU</strong>
        <span>@Model.Kota</span>
    </div>
    <div class="col-md-12">
        <strong class="d-block">Alamat SPBU</strong>
        <span>@Model.Alamat</span>
    </div>
</div>

<ul class="list-unstyled">
    @foreach (var node in Model.Elements)
    {
        RenderChecklistNode(node, 0);
    }
</ul>

<div class="text-end mt-5">
    <button class="btn btn-primary rounded-pill px-4 py-2" data-bs-toggle="modal" data-bs-target="#confirmModal">
        Setujui Laporan Audit
    </button>
</div>

<!-- Modal Konfirmasi -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Persetujuan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin menyetujui laporan audit ini?
            </div>
            <div class="modal-footer">
                <form method="post" asp-action="Approve" asp-route-id="@Context.Request.RouteValues["id"]">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Ya, Setujui</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Media -->
<div class="modal fade" id="mediaModal" tabindex="-1" aria-labelledby="mediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mediaModalLabel">Dokumentasi Foto / Video</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body" id="mediaModalBody">
                <!-- Media akan dimasukkan disini -->
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        .rotate-arrow {
            transition: transform 0.3s ease;
        }

            .rotate-arrow.rotate {
                transform: rotate(90deg);
            }

        .option-btn:hover {
            background-color: #e0f2f1 !important;
            border-color: #10b981;
            color: #0f766e;
        }

        .option-btn.active:hover {
            background-color: #059669 !important;
            color: white;
        }

        .carousel-item img, .carousel-item video {
            max-height: 70vh; /* 70% dari tinggi layar */
            width: auto;
            height: auto;
            object-fit: contain;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        .modal-body {
            overflow-y: auto;
            max-height: 80vh;
        }

    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Rotasi panah collapse
            document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(function (toggle) {
                var targetId = toggle.getAttribute('href') || toggle.dataset.bsTarget;
                var target = document.querySelector(targetId);
                const arrow = toggle.querySelector('.rotate-arrow');
                if (!target || !arrow) return;

                target.addEventListener('show.bs.collapse', function () {
                    arrow.classList.add('rotate');
                });
                target.addEventListener('hide.bs.collapse', function () {
                    arrow.classList.remove('rotate');
                });
            });

            // Highlight opsi nilai terpilih
            document.querySelectorAll('.option-btn').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    const nodeId = this.dataset.nodeId;
                    document.querySelectorAll('.option-btn[data-node-id="' + nodeId + '"]').forEach(function (el) {
                        el.classList.remove('active', 'bg-success', 'text-white');
                    });
                    this.classList.add('active', 'bg-success', 'text-white');
                });
            });
        });

                function showMediaPopup(mediaItems) {
            const container = document.getElementById('mediaModalBody');
            container.innerHTML = '';

            if (!mediaItems || mediaItems.length === 0) {
                container.innerHTML = '<p class="text-muted">Tidak ada media tersedia.</p>';
            } else if (mediaItems.length === 1) {
                const item = mediaItems[0];
                if (item.MediaType === 'IMAGE') {
                    const img = document.createElement('img');
                    img.src = item.MediaPath;
                    img.alt = "Gambar Dokumentasi";
                    img.className = 'img-fluid mb-3 rounded shadow-sm';
                    container.appendChild(img);
                } else if (item.MediaType === 'VIDEO') {
                    const video = document.createElement('video');
                    video.src = item.MediaPath;
                    video.controls = true;
                    video.className = 'img-fluid mb-3 rounded shadow-sm';
                    container.appendChild(video);
                }
            } else {
                // Build Carousel dengan Progress Indicator
                let carouselId = 'mediaCarousel';
                container.innerHTML = `
                    <div id="${carouselId}" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            ${mediaItems.map((item, index) => `
                                <button type="button" data-bs-target="#${carouselId}" data-bs-slide-to="${index}" class="${index === 0 ? 'active' : ''}" aria-current="${index === 0 ? 'true' : 'false'}" aria-label="Slide ${index + 1}"></button>
                            `).join('')}
                        </div>
                        <div class="carousel-inner">
                            ${mediaItems.map((item, index) => `
                                <div class="carousel-item ${index === 0 ? 'active' : ''}">
                                    ${item.MediaType === 'IMAGE' ? `
                                        <img src="${item.MediaPath}" class="d-block w-100 img-fluid rounded shadow-sm" alt="Gambar">
                                    ` : `
                                        <video class="d-block w-100 img-fluid rounded shadow-sm" controls>
                                            <source src="${item.MediaPath}" type="video/mp4">
                                            Your browser does not support the video tag.
                                        </video>
                                    `}
                                </div>
                            `).join('')}
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#${carouselId}" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#${carouselId}" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                `;
            }

            var myModal = new bootstrap.Modal(document.getElementById('mediaModal'));
            myModal.show();
        }



    </script>
}

@functions {
    decimal ExtractDecimalFromOption(string opt)
    {
        var match = System.Text.RegularExpressions.Regex.Match(opt, "\\((.*?)\\)");
        return match.Success && decimal.TryParse(match.Groups[1].Value.Replace(',', '.'), out var val) ? val : 0;
    }

    decimal GetNodeScore(AuditChecklistNode node)
    {
        if (node.ScoreAF.HasValue)
            return node.ScoreAF.Value;
        if (!string.IsNullOrWhiteSpace(node.ScoreInput))
            return ExtractDecimalFromOption(node.ScoreInput) * (node.Weight ?? 0);
        if (node.Children != null && node.Children.Any())
            return node.Children.Sum(GetNodeScore);
        return 0;
    }

    void RenderChecklistNode(AuditChecklistNode node, int level)
    {
        var collapseId = $"collapse-{node.Id}";
        var displayScore = GetNodeScore(node);

        <text>
            <li class="mb-3 ps-@(level * 3)">
                <div class="card border-secondary">
                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                        <a class="fw-bold text-dark text-decoration-none d-flex justify-content-between align-items-center w-100"
                           data-bs-toggle="collapse"
                           href="#@collapseId"
                           role="button" aria-expanded="false" aria-controls="@collapseId">
                            <div>
                                <span>@node.Title</span><br />
                                @if (!string.IsNullOrWhiteSpace(node.Description))
                                {
                                    <small class="text-muted">@node.Description</small>
                                }
                            </div>
                            <div class="text-end">
                                <div class="small">Skor:</div>
                                <strong>@displayScore.ToString("0.00")</strong>
                                <i class="bi bi-chevron-right rotate-arrow ms-2"></i>
                            </div>
                        </a>
                    </div>
                    <div class="collapse" id="@collapseId">
                        <div class="card-body">
                            @if (!string.IsNullOrWhiteSpace(node.ScoreInput))
                            {
                                <div class="mb-2">
                                    <div class="mb-1 fw-semibold">Jawaban:</div>
                                    @foreach (var opt in new List<string> { "A (1,00)", "B (0,80)", "C (0,60)", "D (0,40)", "F (0,00)" })
                                    {
                                        var optKey = opt.Split(' ')[0];
                                        var isActive = node.ScoreInput?.Trim().Equals(optKey, StringComparison.OrdinalIgnoreCase) ?? false;

                                        <button type="button"
                                                class="btn btn-outline-secondary btn-sm me-2 option-btn @(isActive ? "active bg-success text-white" : "")"
                                                data-node-id="@node.Id"
                                                data-score="@optKey">
                                            @opt
                                        </button>
                                    }
                                </div>
                                <div>
                                    <button class="btn btn-light btn-sm me-2">Batal</button>
                                    <button class="btn btn-primary btn-sm">Update Nilai</button>
                                </div>
                            }

                            @if (node.MediaItems != null && node.MediaItems.Any())
                            {
                                <div class="mt-3">
                                    <button type="button" class="btn btn-outline-primary btn-sm" onclick='showMediaPopup(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(node.MediaItems)))'>
                                        <i class="bi bi-image me-1"></i> Lihat Dokumentasi Foto / Video
                                    </button>
                                </div>
                            }

                            @if (node.Children.Any())
                            {
                                <ul class="list-unstyled mt-3">
                                    @foreach (var child in node.Children)
                                    {
                                        RenderChecklistNode(child, level + 1);
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            </li>
        </text>
    }
}
