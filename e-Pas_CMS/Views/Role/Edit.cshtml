@model e_Pas_CMS.ViewModels.RoleAuditorEditViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool hasDefaultSpbu = Model?.SelectedRoleNames?.Any(r => (r ?? "").Trim().ToUpper() == "DEFAULT_SPBU") == true;
}

<div class="container mt-5">
    <h3 class="fw-bold mb-4">Edit User Management</h3>

    <form asp-action="Edit" asp-route-id="@Model.AuditorId" method="post" class="row g-4">
        @* Hidden AuditorId *@
        <input type="hidden" name="AuditorId" value="@Model.AuditorId" />

        <div class="col-md-6">
            <label class="form-label">Username (Dipakai Login, ubah seperlunya)</label>
            <input type="text" name="UserName" class="form-control" value="@Model.UserName" required />
        </div>

        <div class="col-md-6">
            <label class="form-label">Nama Lengkap</label>
            <input type="text" name="AuditorName" class="form-control" value="@Model.AuditorName" required />
        </div>

        <div class="col-md-6">
            <label class="form-label">Handphone</label>
            <input type="text" name="Handphone" class="form-control" value="@Model.Handphone" />
        </div>

        <div class="col-md-6">
            <label class="form-label">Email</label>
            <input type="email" name="Email" class="form-control" value="@Model.Email" />
        </div>

        <div class="col-md-6">
            <label class="form-label">Password (Kosongkan jika tidak diubah)</label>
            <input type="password" name="Password" class="form-control" placeholder="Masukkan Password Baru" />
        </div>

        <div class="col-md-6">
            <label class="form-label">Nama Role</label>
            <button type="button" id="btnOpenRole" class="btn btn-outline-primary w-100">Pilih Role</button>
            <div id="RoleBadgeContainer" class="selected-display mt-2 d-flex flex-wrap gap-2">
                @foreach (var role in Model.SelectedRoleNames)
                {
                    <span class="badge bg-primary">@role</span>
                }
            </div>
            @* hidden inputs for SelectedRoleIds *@
            @foreach (var roleId in Model.SelectedRoleIds)
            {
                <input type="hidden" name="SelectedRoleIds" value="@roleId" />
            }
        </div>

        <div class="col-md-6">
            <label class="form-label">Region</label>
            <button type="button" id="btnOpenRegion" class="btn btn-outline-success w-100">Pilih Region</button>
            <div id="RegionBadgeContainer" class="selected-display mt-2 d-flex flex-wrap gap-2">
                @foreach (var region in Model.SelectedRegionNames)
                {
                    <span class="badge bg-primary">@region</span>
                }
            </div>
            @foreach (var regionId in Model.SelectedRegionIds)
            {
                <input type="hidden" name="SelectedRegionIds" value="@regionId" />
            }
        </div>

        <div class="col-md-6">
            <label class="form-label">SBM</label>
            <button type="button" id="btnOpenSbm" class="btn btn-outline-warning w-100">Pilih SBM</button>
            <div id="SbmBadgeContainer" class="selected-display mt-2 d-flex flex-wrap gap-2">
                @foreach (var sbm in Model.SelectedSbmNames)
                {
                    <span class="badge bg-primary">@sbm</span>
                }
            </div>
            @foreach (var sbmId in Model.SelectedSbmIds)
            {
                <input type="hidden" name="SelectedSbmIds" value="@sbmId" />
            }
        </div>

        @* === SPBU (hanya tampil jika role DEFAULT_SPBU) === *@
        <div class="col-md-12" id="spbuWrapper" style="display:@(hasDefaultSpbu ? "block" : "none")">
            <label class="form-label">SPBU (Tampil jika Nama Role DEFAULT_SPBU)</label>
            <div class="d-flex flex-column gap-2">
                <div class="d-flex gap-2">
                    <button type="button" id="btnOpenSpbu" class="btn btn-outline-success">
                        Pilih SPBU
                    </button>
                    <button type="button" id="btnClearSpbu" class="btn btn-outline-secondary">
                        Hapus Pilihan
                    </button>
                </div>
                <input type="hidden" name="SelectedSpbuId" id="SelectedSpbuId" value="@Model.SelectedSpbuId" />
                <div id="SpbuBadgeContainer" class="selected-display d-flex flex-wrap gap-2">
                    @if (!string.IsNullOrWhiteSpace(Model.SelectedSpbuName))
                    {
                        <span class="badge bg-primary">@Model.SelectedSpbuName</span>
                    }
                </div>
                <small class="text-muted">SPBU wajib dipilih jika role <b>DEFAULT_SPBU</b> dicentang.</small>
            </div>
        </div>

        <div class="col-12 text-end">
            <a href="@Url.Action("Index", "Role")" class="btn btn-secondary">Kembali</a>
            <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
        </div>
    </form>
</div>

<!-- Role Modal -->
<div class="modal fade" id="roleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Pilih Role</h5></div>
            <div class="modal-body">
                @foreach (var role in Model.RoleList)
                {
                    <div class="form-check">
                        <input class="form-check-input role-checkbox" type="checkbox" value="@role.Value" data-name="@role.Text"
                        @(Model.SelectedRoleIds.Contains(role.Value) ? "checked" : "")>
                        <label class="form-check-label">@role.Text</label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                <button class="btn btn-primary" id="btnPilihRole">Pilih</button>
            </div>
        </div>
    </div>
</div>

<!-- Region Modal -->
<div class="modal fade" id="regionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Pilih Region</h5></div>
            <div class="modal-body">
                @foreach (var region in Model.RegionList)
                {
                    <div class="form-check">
                        <input class="form-check-input region-checkbox" type="checkbox" value="@region.Value" data-name="@region.Text"
                        @(Model.SelectedRegionIds.Contains(region.Value) ? "checked" : "")>
                        <label class="form-check-label">@region.Text</label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                <button class="btn btn-primary" id="btnPilihRegion">Pilih</button>
            </div>
        </div>
    </div>
</div>

<!-- SBM Modal -->
<div class="modal fade" id="sbmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Pilih SBM</h5></div>
            <div class="modal-body">
                @foreach (var sbm in Model.SbmList)
                {
                    <div class="form-check">
                        <input class="form-check-input sbm-checkbox" type="checkbox" value="@sbm.Value" data-name="@sbm.Text"
                        @(Model.SelectedSbmIds.Contains(sbm.Value) ? "checked" : "")>
                        <label class="form-check-label">@sbm.Text</label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                <button class="btn btn-warning" id="btnPilihSbm">Pilih</button>
            </div>
        </div>
    </div>
</div>

<!-- SPBU Modal (single select) -->
<div class="modal fade" id="spbuModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Pilih SPBU</h5>
            </div>

            <div class="px-3 pt-3">
                <div class="input-group mb-2">
                    <span class="input-group-text">Cari</span>
                    <input type="text" id="spbuSearch" class="form-control" placeholder="Ketik nomor SPBU / provinsi / kota / alamat (min. 2 huruf)">
                    <button class="btn btn-outline-secondary" type="button" id="spbuSearchClear">Clear</button>
                </div>
                <small id="spbuResultInfo" class="text-muted">Menampilkan semua data.</small>
            </div>

            <div class="modal-body pt-2" style="max-height:60vh; overflow:auto;">
                @if (Model.SpbuList?.Any() == true)
                {
                    <div id="spbuList" class="list-group">
                        @foreach (var spbu in Model.SpbuList)
                        {
                            <label class="list-group-item d-flex align-items-center gap-2 spbu-item">
                                <input class="form-check-input spbu-radio" type="radio" name="spbuRadio"
                                       value="@spbu.Value" data-name="@spbu.Text"
                                @(Model.SelectedSpbuId == spbu.Value ? "checked" : "") />
                                <span class="spbu-text">@spbu.Text</span>
                            </label>
                        }
                    </div>
                    <div id="spbuEmptyState" class="text-muted py-3 d-none">Tidak ada hasil yang cocok.</div>
                }
                else
                {
                    <div class="text-muted">Daftar SPBU tidak tersedia.</div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                <button class="btn btn-success" id="btnPilihSpbu">Pilih</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // === Open modals ===
            $('#btnOpenRole').click(function () {
                var selectedIds = $('input[name="SelectedRoleIds"]').map(function () { return this.value; }).get();
                $('.role-checkbox').each(function () {
                    $(this).prop('checked', selectedIds.includes($(this).val()));
                });
                new bootstrap.Modal(document.getElementById('roleModal')).show();
            });

            $('#btnOpenRegion').click(function () {
                var selectedIds = $('input[name="SelectedRegionIds"]').map(function () { return this.value; }).get();
                $('.region-checkbox').each(function () {
                    $(this).prop('checked', selectedIds.includes($(this).val()));
                });
                new bootstrap.Modal(document.getElementById('regionModal')).show();
            });

            $('#btnOpenSbm').click(function () {
                var selectedIds = $('input[name="SelectedSbmIds"]').map(function () { return this.value; }).get();
                $('.sbm-checkbox').each(function () {
                    $(this).prop('checked', selectedIds.includes($(this).val()));
                });
                new bootstrap.Modal(document.getElementById('sbmModal')).show();
            });

            $('#btnOpenSpbu').click(function () {
                // Pre-check from hidden value
                var current = $('#SelectedSpbuId').val() || '';
                if (current) {
                    $('.spbu-radio[value="' + current + '"]').prop('checked', true);
                }
                new bootstrap.Modal(document.getElementById('spbuModal')).show();

                // Fokus ke search ketika modal dibuka
                setTimeout(function(){ $('#spbuSearch').trigger('focus'); }, 200);
            });

            // === Confirm selections ===
            $('#btnPilihRole').click(function () {
                var selected = $('.role-checkbox:checked');
                var ids = selected.map(function () { return this.value; }).get();
                var names = selected.map(function () { return $(this).data('name'); }).get();

                // Reset hidden inputs
                $('input[name="SelectedRoleIds"]').remove();
                ids.forEach(id => {
                    $('<input>').attr({ type: 'hidden', name: 'SelectedRoleIds', value: id }).appendTo('form');
                });

                updateBadge('RoleBadgeContainer', names);
                toggleSpbuSection(names); // show/hide SPBU based on role names

                bootstrap.Modal.getInstance(document.getElementById('roleModal')).hide();
            });

            $('#btnPilihRegion').click(function () {
                var selected = $('.region-checkbox:checked');
                var ids = selected.map(function () { return this.value; }).get();
                var names = selected.map(function () { return $(this).data('name'); }).get();

                $('input[name="SelectedRegionIds"]').remove();
                ids.forEach(id => {
                    $('<input>').attr({ type: 'hidden', name: 'SelectedRegionIds', value: id }).appendTo('form');
                });

                updateBadge('RegionBadgeContainer', names);
                bootstrap.Modal.getInstance(document.getElementById('regionModal')).hide();
            });

            $('#btnPilihSbm').click(function () {
                var selected = $('.sbm-checkbox:checked');
                var ids = selected.map(function () { return this.value; }).get();
                var names = selected.map(function () { return $(this).data('name'); }).get();

                $('input[name="SelectedSbmIds"]').remove();
                ids.forEach(id => {
                    $('<input>').attr({ type: 'hidden', name: 'SelectedSbmIds', value: id }).appendTo('form');
                });

                updateBadge('SbmBadgeContainer', names);
                bootstrap.Modal.getInstance(document.getElementById('sbmModal')).hide();
            });

            $('#btnPilihSpbu').click(function () {
                var selected = $('.spbu-radio:checked');
                if (selected.length === 0) {
                    bootstrap.Modal.getInstance(document.getElementById('spbuModal')).hide();
                    return;
                }
                var id = selected.val();
                var name = selected.data('name');

                $('#SelectedSpbuId').val(id);
                updateBadge('SpbuBadgeContainer', [name]);

                bootstrap.Modal.getInstance(document.getElementById('spbuModal')).hide();
            });

            $('#btnClearSpbu').click(function () {
                $('#SelectedSpbuId').val('');
                updateBadge('SpbuBadgeContainer', []);
                $('.spbu-radio').prop('checked', false);
            });

            // === Live search (client-side) ===
            const $spbuSearch = $('#spbuSearch');
            const $spbuList = $('#spbuList');
            const $spbuItems = $spbuList.find('.spbu-item');
            const $spbuEmpty = $('#spbuEmptyState');
            const $info = $('#spbuResultInfo');

            $('#spbuSearchClear').on('click', function () {
                $spbuSearch.val('');
                filterSpbu('');
                $spbuSearch.trigger('focus');
            });

            $spbuSearch.on('input', debounce(function () {
                const q = ($spbuSearch.val() || '').toString().trim();
                filterSpbu(q);
            }, 180));

            function filterSpbu(query) {
                const q = (query || '').toLowerCase();
                let shown = 0;

                if (q.length >= 2) {
                    $spbuItems.each(function () {
                        const text = $(this).find('.spbu-text').text().toLowerCase();
                        const hit = text.includes(q);
                        $(this).toggleClass('d-none', !hit);
                        if (hit) shown++;
                    });
                    $info.text(shown > 0 ? `Hasil: ${shown}` : 'Tidak ada hasil.');
                    $spbuEmpty.toggleClass('d-none', shown > 0);
                } else {
                    // show all when less than 2 chars
                    $spbuItems.removeClass('d-none');
                    $spbuEmpty.addClass('d-none');
                    $info.text('Menampilkan semua data.');
                }
            }

            // === Helpers ===
            function updateBadge(containerId, items) {
                const container = document.getElementById(containerId);
                container.innerHTML = '';
                (items || []).forEach(item => {
                    if (!item) return;
                    const badge = document.createElement('span');
                    badge.className = 'badge bg-primary';
                    badge.innerText = item;
                    container.appendChild(badge);
                });
            }

            function toggleSpbuSection(roleNames) {
                const hasDefault = (roleNames || []).some(n => (n || '').toString().trim().toUpperCase() === 'DEFAULT_SPBU');
                if (hasDefault) {
                    $('#spbuWrapper').slideDown(120);
                } else {
                    $('#spbuWrapper').slideUp(120);
                    $('#SelectedSpbuId').val('');
                    updateBadge('SpbuBadgeContainer', []);
                    $('.spbu-radio').prop('checked', false);
                }
            }

            function debounce(fn, wait) {
                let t;
                return function() {
                    clearTimeout(t);
                    const args = arguments, ctx = this;
                    t = setTimeout(function(){ fn.apply(ctx, args); }, wait);
                };
            }

            // Initial toggle based on server-side roles (when page first loads)
            toggleSpbuSection(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SelectedRoleNames ?? new List<string>())));
        });
    </script>
}