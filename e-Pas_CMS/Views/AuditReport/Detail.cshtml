﻿@using e_Pas_CMS.ViewModels
@using Newtonsoft.Json
@model DetailReportViewModel

@{
    ViewData["Title"] = "Detail Laporan Audit";
    bool isVerified = Model.Status?.ToUpper() == "VERIFIED";

    var isSuperadmin = User.IsInRole("Report");

    var isCertified = Model.TotalScore >= Model.MinPassingScore && string.IsNullOrWhiteSpace(Model.PenaltyAlerts);
    var statusLabel = isCertified ? "EXCELLENT" : "NOT CERTIFIED";
    var boxClass = isCertified ? "bg-warning" : "bg-danger text-white";
    var showPenalty = !isCertified && !string.IsNullOrWhiteSpace(Model.PenaltyAlerts);
}

@Html.AntiForgeryToken()

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<style>
    /* Gaya tampilan badge compliance */
    .compliance-badge {
        display: inline-block;
        min-width: 90px;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 0.5rem;
        padding: 0.25rem 0.5rem;
        text-align: center;
        line-height: 1.2;
        color: white;
    }

    .bg-excellent {
        background-color: #f0ad4e; /* orange */
    }

    .bg-good {
        background-color: #5cb85c; /* green */
    }

    .bg-improve {
        background-color: #d9534f; /* red */
    }

    .bg-none {
        background-color: #6c757d; /* gray */
    }
</style>

<!-- HEADER ATAS -->
<div class="d-flex align-items-center justify-content-between mb-4">
    <div>
        <h2 class="fw-bold mb-1">
            Detail Laporan Audit Performa SPBU
            <small class="text-muted">(@Model.AuditType)</small>
        </h2>
        <div>
            <a class="text-primary text-decoration-none"
               href="@Url.Action("Index", "AuditReport")">
                <small>Daftar Report / </small>
            </a>

            @Model.ReportNo <i class="bi bi-caret-down-fill"></i>

        </div>
    </div>
    <div class="d-flex gap-2">
        <a class="btn btn-outline-success"
           href="@Url.Action("DownloadPdfQuestGood", "AuditReport", new { id = Context.Request.RouteValues["id"], type = "good" })">
            <i class="bi bi-check-circle-fill"></i> Report Good
        </a>
        <a class="btn btn-outline-warning"
           href="@Url.Action("DownloadPdfQuest", "AuditReport", new { id = Context.Request.RouteValues["id"], type = "excellent" })">
            <i class="bi bi-star-fill"></i> Report Excellent
        </a>
    </div>

</div>

<!-- STATUS -->
@if (isCertified)
{
    <div class="alert alert-success text-center py-2 mb-4">
        <strong>CERTIFIED</strong>
    </div>
}
else
{
    <div class="alert alert-danger text-center py-2 mb-4">
        <strong>NOT CERTIFIED</strong>
    </div>
}

<!-- INFORMASI SPBU --><div class="card mb-5 shadow-sm">
    <div class="card-body">
        <!-- Informasi SPBU -->
        <h5 class="card-title mb-4">Informasi SPBU</h5>
        <div class="row gy-3">
            <div class="col-md-3"><strong>Nomor SPBU</strong><br />@Model.SpbuNo</div>
            <div class="col-md-3"><strong>Region</strong><br />@Model.Region</div>
            <div class="col-md-3"><strong>Kabupaten/Kota</strong><br />@Model.Kota</div>
            <div class="col-md-3"><strong>Alamat SPBU</strong><br />@Model.Alamat</div>

            <div class="col-md-3"><strong>Nama Pemilik SPBU</strong><br />@Model.OwnerName</div>
            <div class="col-md-3"><strong>Nama Manajer</strong><br />@Model.ManagerName</div>
            <div class="col-md-3"><strong>Tipe Kepemilikan</strong><br />@Model.OwnershipType</div>
            <div class="col-md-3"><strong>Quarter</strong><br />@Model.Quarter</div>

            <div class="col-md-3"><strong>Tahun</strong><br />@Model.Year</div>
            <div class="col-md-3"><strong>MOR</strong><br />@Model.MOR</div>
            <div class="col-md-3"><strong>Sales Area</strong><br />@Model.SalesArea</div>
            <div class="col-md-3"><strong>SBM</strong><br />@Model.SBM</div>

            <div class="col-md-3"><strong>Tipe SPBU</strong><br />@Model.AuditType</div>
            <div class="col-md-3"><strong>Kelas SPBU</strong><br />@Model.ClassSPBU</div>
            <div class="col-md-3"><strong>Telepon</strong><br />@Model.Phone</div>
        </div>

        <!-- Informasi Kegiatan Audit -->
        <h5 class="card-title mb-4 mt-5">Informasi Kegiatan Audit</h5>
        <div class="row gy-3">
            <div class="col-md-3"><strong>No. Report</strong><br />@Model.ReportNo</div>
            <div class="col-md-3"><strong>Tanggal Audit</strong><br />@Model.TanggalSubmit?.ToString("dd/MM/yyyy, HH:mm 'WIB'")</div>
            <div class="col-md-3"><strong>Waktu Audit</strong><br />@Model.TanggalSubmit?.ToString("dd/MM/yyyy, HH:mm:ss tt")</div>
            <div class="col-md-3"><strong>Verifikator</strong><br />@Model.OwnerName</div>

            <div class="col-md-3"><strong>Auditor 1</strong><br />@Model.NamaAuditor</div>
            <div class="col-md-3"><strong>Auditor 2</strong><br />@Model.OwnerName</div>
            <div class="col-md-3"><strong>Tipe Audit</strong><br />@Model.AuditType</div>
            <div class="col-md-3"><strong>Next Audit</strong><br />@Model.AuditType</div>

            <div class="col-md-3"><strong>Ko-ordinator</strong><br />@Model.ManagerName</div>
            <div class="col-md-3"><strong>Sent Date</strong><br />@Model.TanggalSubmit?.ToString("dd/MM/yyyy, HH:mm 'WIB'")</div>
        </div>
    </div>
</div>


<!-- LAPORAN PENILAIAN (Skor dan Level) -->
<div class="mb-5">
    <h4 class="fw-bold">Laporan Penilaian</h4>

    <!-- Total Score -->
    <div class="@boxClass rounded-3 text-center py-2 mb-1">
        <strong>
            Total Score (TS): @Model.TotalScore.ToString("0.00")% &mdash;
            @statusLabel
        </strong>

        @if (showPenalty)
        {
            <div class="mt-1 small">
                <strong>Penalty:</strong> @Model.PenaltyAlerts
            </div>
        }
    </div>

    <div class="text-center text-muted mb-3">
        Nilai Minimum Pasti Pas: @Model.MinPassingScore.ToString("0.00")%
    </div>


    <!-- Level Konfirmasi Pertamina Way (Elemen) -->
    <h5 class="fw-bold mt-5">Level Konfirmasi Pertamina Way (Elemen)</h5>
    <div class="table-responsive">
        <table class="table table-bordered align-middle shadow-sm">
            <thead class="table-light">
                <tr class="fw-bold">
                    <th style="width: 45%">Indikator Penilaian</th>
                    <th style="width: 15%" class="text-center">Bobot Nilai</th>
                    <th style="width: 20%" class="text-center">Nilai Minimum Pasti Pas</th>
                    <th style="width: 20%" class="text-center">Compliance Level</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Elements.Count; i++)
                {
                    var element = Model.Elements[i];
                    var scoreFraction = element.ScoreAF ?? 0m;
                    string level = "-";
                    string badgeClass = "bg-none";

                    if (scoreFraction >= 1.00m)
                    {
                        level = "Excellent";
                        badgeClass = "bg-excellent";
                    }
                    else if (scoreFraction >= 0.875m)
                    {
                        level = "Good";
                        badgeClass = "bg-good";
                    }
                    else
                    {
                        level = "Needs Improvement";
                        badgeClass = "bg-improve";
                    }

                    // Nilai minimum dinamis berdasarkan index
                    decimal minValue = i switch
                    {
                        0 => 85.00m,
                        1 => 85.00m,
                        2 => 85.00m,
                        3 => 20.00m,
                        4 => 50.00m,
                        _ => 80.00m
                    };

                    <tr>
                        <td>
                            <strong>@element.Title</strong><br />
                            @if (!string.IsNullOrWhiteSpace(element.Description))
                            {
                                <span class="text-muted small">@element.Description</span>
                            }
                        </td>
                        <td class="text-center">@((int)(element.Weight ?? 0))</td>
                        <td class="text-center">@minValue.ToString("0.00")%</td>
                        <td class="text-center">
                            <div class="compliance-badge @badgeClass">
                                @($"{(scoreFraction * 100):0.##}%")<br />
                                <small>@level</small>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <!-- Conformity Level by Pertamina Way (Sub-Element) -->
    <h5 class="fw-bold mt-5">Conformity Level by Pertamina Way (Sub - Element)</h5>
    @foreach (var element in Model.Elements)
    {
        // Hanya tampilkan sub-elemen jika elemen ini memiliki deskripsi (menandakan elemen ini adalah kategori dengan sub-pertanyaan)
        if (string.IsNullOrWhiteSpace(element.Description)) { continue; }

        var elementScore = element.ScoreAF ?? 0m;
        string elementScoreStr = elementScore.ToString("0.00");

        <div class="mt-4">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="fw-bold mb-0">@element.Description</h6>
                @* <div class="text-muted">
                    Skor: <strong>@elementScoreStr</strong>
                </div> *@
            </div>

            <table class="table table-bordered align-middle">
                <thead class="table-light">
                    <tr>
                        <th style="width: 60%">Indikator Penilaian</th>
                        <th style="width: 20%" class="text-center">Bobot Nilai</th>
                        <th style="width: 20%" class="text-center">Compliance Level</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var child in element.Children)
                    {
                        decimal? af = child.ScoreAF;
                        string level = "-";
                        string badgeClass = "bg-none";
                        string scoreDisplay = "-";

                        if (af.HasValue)
                        {
                            var scorePercent = af.Value * 100;
                            scoreDisplay = $"{scorePercent:0.##}%";

                            if (scorePercent >= 100m)
                            {
                                level = "Excellent";
                                badgeClass = "bg-excellent";
                            }
                            else if (scorePercent >= 87.5m)
                            {
                                level = "Good";
                                badgeClass = "bg-good";
                            }
                            else
                            {
                                level = "Needs Improvement";
                                badgeClass = "bg-improve";
                            }
                        }

                        <tr>
                            <td>@child.Description</td>
                            <td class="text-center">@((child.Weight ?? 0).ToString("0.##"))</td>
                            <td class="text-center">
                                <div class="compliance-badge @badgeClass">
                                    @scoreDisplay<br />
                                    <small>@level</small>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- KOMENTAR AUDITOR -->
<div class="card mb-5 shadow-sm">
    <div class="card-body">
        <h5 class="fw-bold mb-4">Komentar Auditor</h5>

        <div class="mb-4">
            <strong>Staf Terlatih dan Termotivasi:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Html.Raw(Model.KomentarStaf?.Replace("\n", "<br>"))
            </div>
        </div>

        <div class="mb-4">
            <strong>Jaminan Kualitas dan Kuantitas:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Html.Raw(Model.KomentarQuality?.Replace("\n", "<br>"))
            </div>
        </div>

        <div class="mb-4">
            <strong>Peralatan Terpelihara dan HSSE:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Html.Raw(Model.KomentarHSSE?.Replace("\n", "<br>"))
            </div>
        </div>

        <div class="mb-4">
            <strong>Tampilan Fisik Seragam:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Html.Raw(Model.KomentarVisual?.Replace("\n", "<br>"))
            </div>
        </div>

        <div>
            <strong>Komentar Manajer SPBU:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Html.Raw(Model.KomentarManager?.Replace("\n", "<br>"))
            </div>
        </div>
    </div>
</div>

<!-- CHECKLIST AUDIT -->
@if (Model.AuditType == "Mystery Audit" || Model.AuditType == "Regular Audit" || Model.AuditType == "Basic Operational")
{
    <h4 class="mt-5 fw-bold">Checklist Audit</h4>
    <ul id="auditChecklist" class="list-unstyled">
        @foreach (var node in Model.Elements)
        {
            await RenderChecklistNode(node, 0, isVerified, true);

        }
    </ul>
}

<!-- Q&Q CHECK (tabel hasil Quality & Quantity Check jika ada) -->
@if (Model.QqChecks?.Any() == true)
{
    <h4 class="mt-5 fw-bold">QQ Check</h4>
    <div class="table-responsive">
        <table class="table table-bordered table-striped mt-3">
            <thead class="table-light">
                <tr>
                    <th>Nozzle Number</th>
                    <th>DU Make</th>''
                    <th>DU Serial No</th>
                    <th>Product</th>
                    <th>Mode</th>
                    <th>Qty Var (m)</th>
                    <th>Qty Var (%)</th>
                    <th>Density</th>
                    <th>Temp</th>
                    <th>Density15°</th>
                    <th>Ref Density15°</th>
                    <th>Tank No</th>
                    <th>Density Var</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var qq in Model.QqChecks)
                {
                    <tr>
                        <td>@qq.NozzleNumber</td>
                        <td>@qq.DuMake</td>
                        <td>@qq.DuSerialNo</td>
                        <td>@qq.Product</td>
                        <td>@qq.Mode</td>
                        <td>@qq.QuantityVariationWithMeasure</td>
                        <td>@qq.QuantityVariationInPercentage</td>
                        <td>@qq.ObservedDensity</td>
                        <td>@qq.ObservedTemp</td>
                        <td>@qq.ObservedDensity15Degree</td>
                        <td>@qq.ReferenceDensity15Degree</td>
                        <td>@qq.TankNumber</td>
                        <td>@qq.DensityVariation</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- BERITA ACARA -->
@if (!string.IsNullOrEmpty(Model.Notes) || (Model.FinalDocuments != null && Model.FinalDocuments.Any()))
{
    <div class="card p-4 mb-5 shadow-sm mt-5">
        <h4 class="fw-bold mb-4">Berita Acara</h4>

        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            <div class="mb-3">
                <label class="fw-semibold">Isi Catatan</label>
                <div class="border rounded p-3 bg-light">
                    @Model.Notes
                </div>
            </div>
        }

        @if (Model.FinalDocuments != null && Model.FinalDocuments.Any())
        {
            <div class="mb-2 fw-semibold mt-4">
                Bukti Dokumen/Foto Berita Acara
            </div>
            <ul class="list-unstyled">
                <li class="mb-2">
                    <i class="bi bi-file-earmark-image text-primary"></i>
                    <button type="button"
                            class="btn btn-link text-decoration-none p-0"
                            onclick='showFinalMediaPopup(@Html.Raw(JsonConvert.SerializeObject(Model.FinalDocuments)))'>
                        Lihat Lampiran
                    </button>
                </li>
            </ul>
        }
    </div>
}

<div class="text-end mt-5">
    @if (!isSuperadmin)
    {
        <button class="btn btn-primary rounded-pill px-4 py-2" data-bs-toggle="modal" data-bs-target="#confirmModal">
            Reassign Laporan Audit
        </button>
    }
    else
    {
        <a asp-action="Index" class="btn btn-secondary rounded-pill px-4 py-2">
            Back
        </a>
    }
</div>

<!-- Modal Konfirmasi -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Persetujuan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Apakah Anda yakin ingin mengembalikan laporan audit ini?
            </div>
            <div class="modal-footer">
                <form method="post" asp-action="Reassign" asp-route-id="@Context.Request.RouteValues["id"]">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Ya, Setujui</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Media -->
<div class="modal fade" id="mediaModal" tabindex="-1" aria-labelledby="mediaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mediaModalLabel">Dokumentasi Foto / Video</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body" id="mediaModalBody">
                <!-- Media akan dimasukkan di sini -->
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <style>
        .card-header .btn-sm {
            min-width: 70px;
        }

        .card-header .option-group .btn {
            min-width: 60px;
            text-align: center;
        }

        .rotate-arrow {
            transition: transform .3s ease;
        }

            .rotate-arrow.rotate {
                transform: rotate(90deg);
            }

        .option-btn:hover {
            background-color: #e0f2f1 !important;
            border-color: #10b981;
            color: #0f766e;
        }

        .option-btn.active, .option-btn.active:hover {
            background-color: #059669 !important;
            color: #fff;
        }
        /* Media fit di modal */
        .carousel-item img,
        .carousel-item video,
        #mediaModalBody img,
        #mediaModalBody video {
            max-width: 100%;
            max-height: 80vh;
            object-fit: contain;
            display: block;
            margin: 0 auto;
        }

        .modal {
            outline: none !important;
        }

    </style>
}

@section Scripts {
    <script>
        $(function() {
        // Toggle pilihan jawaban
        $(document).on('click', '.option-btn', function() {
        var nodeId = $(this).data('node-id');
        $('.option-btn[data-node-id="'+nodeId+'"]')
        .removeClass('active bg-success text-white')
        .addClass('btn-outline-secondary');
        $(this)
        .removeClass('btn-outline-secondary')
        .addClass('active bg-success text-white');
        });

        // Hitung ulang satu node (rekursif)

        function recalcNode($li) {
            var nodeId = $li.attr('id').replace('node-', '');
            var weight = parseFloat($li.attr('data-weight')) || 0;
            var sumAF = 0;
            var sumWeight = 0;
            var sumX = 0;
            var skor = 0;

            var map = { A: 1, B: 0.8, C: 0.6, D: 0.4, E: 0.2, F: 0 };

            var $grp = $li.find('.option-group[data-node-id="' + nodeId + '"]');
            var isRelaksasi = $grp.data('is-relaksasi');

            if ($grp.length) {
                var letter = $grp.find('.option-btn.active').data('score') || '';
                if (letter === 'X') {
                    var scoreX = parseFloat($li.attr('data-score-x')) || 0;
                    sumX = weight;
                    sumAF = scoreX;
                } else {
                    if (isRelaksasi === 'True' && letter === 'F') {
                        sumAF = 1 * weight;
                    } else {
                        sumAF = (map[letter] || 0) * weight;
                    }
                }
                sumWeight = weight;
                skor = (sumWeight - sumX) > 0 ? (sumAF / (sumWeight - sumX)) * sumWeight : 0;
            } else {
                var children = $li.find('> .card > .collapse > .card-body > ul > li');
                children.each(function () {
                    var result = recalcNode($(this));
                    sumAF += result.af;
                    sumWeight += result.wt;
                    sumX += result.x;
                });

                var elementTitle = $li.find('> .card > .card-header span.fw-bold.text-dark').text().trim();

                if (elementTitle === "Elemen 2" || elementTitle === "Elemen 5") {
                    // console.log("🔍 Menjumlah langsung skor anak untuk:", elementTitle);
                    var directSum = 0;
                    children.each(function () {
                        var rawScore = $(this).find('.score-x').text();
                        var subScore = parseFloat(rawScore) || 0;
                        directSum += subScore;
                        console.log("   ↪ Sub skor:", subScore);
                    });
                    skor = directSum;
                    sumAF = skor;
                    sumWeight = 1;
                    sumX = 0;
                } else {
                    skor = (sumWeight - sumX) > 0 ? (sumAF / (sumWeight - sumX)) * sumWeight : 0;
                }
            }

            var $scoreElement = $li.find('.score-x[data-node-id="' + nodeId + '"]');
            // console.log("📌 Node:", nodeId, "| Judul:", $li.find('.fw-bold.text-dark').text().trim(), "| Skor akhir:", skor.toFixed(2));
            $scoreElement.text(skor.toFixed(2)); // TANPA 'Skor:' karena sudah ada di <small>

            return { af: sumAF, wt: sumWeight, x: sumX };
        }

        function recalcAll() {
        $('#auditChecklist > li[id^="node-"]').each(function () {
        recalcNode($(this));
        });
        }

        // recalc saat update
        $(document).on('click', '.update-score-btn', function() {
        var nodeId  = $(this).data('node-id');
        var auditId = $(this).data('audit-id');
        var score   = $('.option-btn[data-node-id="'+nodeId+'"].active').data('score');
        var token   = $('input[name="__RequestVerificationToken"]').val();
        if (!score) return alert('Pilih jawaban dulu!');
        fetch('/Audit/UpdateScore', {
        method: 'POST',
        headers: {
        'Content-Type': 'application/json',
        'RequestVerificationToken': token
        },
        body: JSON.stringify({ NodeId: nodeId, AuditId: auditId, Score: score })
        })
        .then(res => res.ok ? recalcAll() : res.text().then(t => Promise.reject(t)))
        .catch(err => {
        console.error(err);
        alert('Gagal update nilai: ' + err);
        });
        });

        // Recalc juga setelah collapse toggle (open/close)
        $('#auditChecklist').on('shown.bs.collapse hidden.bs.collapse', function(){
        recalcAll();
        });

        // Inisialisasi pertama
        recalcAll();
        });
        function showMediaPopup(mediaItems) {
        const container = document.getElementById('mediaModalBody');
        container.innerHTML = '';

        if (!mediaItems || mediaItems.length === 0) {
        container.innerHTML = '<p class="text-muted">Tidak ada media tersedia.</p>';
        }
        else if (mediaItems.length === 1) {
        const item = mediaItems[0];
        let el = document.createElement(item.MediaType?.toUpperCase() === 'VIDEO' || item.MediaPath?.endsWith('.mp4')
        ? 'video' : 'img');

        if (el.tagName === 'IMG') {
        el.src = item.MediaPath;
        el.alt = '';
        el.className = 'img-fluid rounded';
        } else {
        el.src = item.MediaPath;
        el.controls = true;
        el.className = 'w-100 rounded';
        }
        container.appendChild(el);
        }
        else {
        const carouselId = 'mediaCarousel';
        const indicators = [];
        const innerItems = [];

        mediaItems.forEach((item, index) => {
        const isActive = index === 0 ? 'active' : '';
        const mediaTag = item.MediaType?.toUpperCase() === 'VIDEO' || item.MediaPath?.endsWith('.mp4')
        ? `<video controls class="d-block w-100 rounded"><source src="${item.MediaPath}" type="video/mp4"></video>`
        : `<img src="${item.MediaPath}" class="d-block w-100 rounded" alt="">`;

        indicators.push(`<button type="button" data-bs-target="#${carouselId}" data-bs-slide-to="${index}" class="${isActive}" aria-current="${isActive ? 'true' : ''}" aria-label="Slide ${index + 1}"></button>`);
        innerItems.push(`<div class="carousel-item ${isActive}">${mediaTag}</div>`);
        });

        container.innerHTML = `
        <div id="${carouselId}" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-indicators">
        ${indicators.join('')}
        </div>
        <div class="carousel-inner">
        ${innerItems.join('')}
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#${carouselId}" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#${carouselId}" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
        </button>
        </div>`;
        }

                const modalEl = document.getElementById('mediaModal');
        const modal = new bootstrap.Modal(modalEl, {
            backdrop: 'static',
            keyboard: false,
            focus: false // <== mencegah scroll auto ke dalam modal
        });
        modal.show();

        }

        function showFinalMediaPopup(mediaItems) {
        showMediaPopup(mediaItems);
        }

            document.getElementById('btnDownloadPdf')?.addEventListener('click', function () {
            const auditId = '@Context.Request.RouteValues["id"]';

            fetch(`/AuditReport/DownloadPdfQuest?id=${auditId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/pdf'
                }
            })
            .then(response => {
                if (!response.ok) throw new Error('Gagal mengunduh PDF');

                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.href = url;
                link.download = `LaporanAudit_${auditId}.pdf`;
                document.body.appendChild(link);
                link.click();
                link.remove();
                window.URL.revokeObjectURL(url);
            })
            .catch(err => {
                console.error(err);
                alert('Gagal mengunduh PDF');
            });
        });

    </script>
}

@functions {
    async Task RenderChecklistNode(AuditChecklistNode node, int level, bool isVerified, bool isReadonlyUser)

    {
        var collapseId = $"collapse-{node.Id}";
        var paddingClass = $"ps-{level * 3}";
        <li id="node-@node.Id"
            class="mb-3 @paddingClass"
            data-weight="@(node.Weight ?? 0)"
            data-score-x="@(node.ScoreX?.ToString("0.00") ?? "0")">

            <div class="card border-secondary">
                <!-- HEADER: toggle + skor -->
                <div class="card-header bg-light d-flex flex-wrap justify-content-between align-items-center gap-2">
                    <button class="btn btn-link flex-grow-1 text-start py-0"
                            type="button"
                            data-bs-toggle="collapse"
                            data-bs-target="#@collapseId"
                            aria-expanded="false"
                            aria-controls="@collapseId">
                        <span class="fw-bold text-dark">@node.Title</span>
                        @if (!string.IsNullOrWhiteSpace(node.Description))
                        {
                            <span class="fw-bold fs-6 text-muted ms-2">@node.Description</span>
                        }
                        <i class="bi bi-chevron-right rotate-arrow ms-2"></i>
                    </button>
                    @if (node.Type == "QUESTION")
                    {
                        <div class="ms-auto d-flex align-items-center flex-wrap gap-2 w-100 justify-content-between">
                            <!-- Pilihan A-F -->
                            <div class="d-flex align-items-center flex-wrap gap-2">
                                <div class="option-group"
                                     data-node-id="@node.Id"
                                     data-is-relaksasi="@node.IsRelaksasi"
                                     data-score-option="@node.ScoreOption">
                                    @{
                                        var opts = (node.ScoreOption ?? "")
                                        .Split('/', StringSplitOptions.RemoveEmptyEntries)
                                        .Select(s => s.Trim().ToUpper())
                                        .SelectMany(o => o == "A-F"
                                        ? new[] { "A", "B", "C", "D", "E", "F" }
                                        : new[] { o })
                                        .Distinct();
                                    }
                                    @foreach (var opt in opts)
                                    {
                                        decimal val = opt switch
                                        {
                                            "A" => 1m,
                                            "B" => 0.8m,
                                            "C" => 0.6m,
                                            "D" => 0.4m,
                                            "E" => 0.2m,
                                            "F" => 0m,
                                            _ => 0m
                                        };
                                        bool active = node.ScoreInput == opt;
                                        <button type="button"
                                                class="btn btn-sm option-btn @(active ? "active bg-success text-white" : "btn-outline-secondary")"
                                                data-node-id="@node.Id"
                                                data-score="@opt"
                                                disabled>
                                            @(opt == "X" ? "X" : $"{opt} ({(node.IsRelaksasi && opt == "F" ? 1 : val):0.00})")
                                        </button>

                                    }
                                </div>

                                <!-- Skor -->
                                <div class="text-end">
                                    <small>skor :</small><br />
                                    <strong class="score-x text-primary" data-node-id="@node.Id"></strong>
                                </div>
                            </div>

                            <!-- Tombol Update + Batal -->
                            @if (!isReadonlyUser)
                            {
                                <div class="d-flex gap-2 ms-auto">
                                    <button type="button"
                                            class="btn btn-sm btn-primary update-score-btn"
                                            data-node-id="@node.Id"
                                            data-audit-id="@ViewBag.AuditId"
                                    @(isVerified ? "disabled" : "")>
                                        Update
                                    </button>

                                    <button type="button"
                                            class="btn btn-sm btn-secondary cancel-score-btn"
                                            data-node-id="@node.Id"
                                    @(isVerified ? "disabled" : "")>
                                        Batal
                                    </button>
                                </div>
                            }
                        </div>
                    }

                    else if (node.ScoreInput != "X")
                    {
                        <div class="ms-auto text-end">
                            <small>Skor:</small>
                            <strong class="score-x" data-node-id="@node.Id">0.00</strong>
                        </div>
                    }
                </div>


                <!-- COLLAPSE BODY -->
                <div id="@collapseId" class="collapse">
                    <div class="card-body">
                        @if (node.Type == "QUESTION")
                        {
                            // @if (!isReadonlyUser)
                            // {
                            //     <div class="mb-2 d-flex gap-2 align-items-center flex-wrap">
                            //         <button type="button"
                            //                 class="btn btn-sm btn-primary update-score-btn"
                            //                 data-node-id="@node.Id"
                            //                 data-audit-id="@ViewBag.AuditId"
                            //         @(isVerified ? "disabled" : "")>
                            //             Update Nilai
                            //         </button>

                            //         <button type="button"
                            //                 class="btn btn-sm btn-secondary cancel-score-btn"
                            //                 data-node-id="@node.Id"
                            //         @(isVerified ? "disabled" : "")>
                            //             Batal
                            //         </button>
                            //     </div>
                            // }
                            @if (node.Type == "QUESTION" && (node.Children == null || !node.Children.Any()))
                            {
                                <div class="d-flex gap-2 align-items-center mb-3 flex-wrap">
                                    @if (node.MediaItems?.Any() ?? false)
                                    {
                                        <button type="button" class="btn btn-outline-primary btn-sm"
                                                onclick='showMediaPopup(@Html.Raw(JsonConvert.SerializeObject(node.MediaItems ?? new List<MediaItem> { })))'>
                                            <i class="bi bi-image me-1"></i> Lihat Dokumentasi
                                        </button>
                                    }

                                    @if (!isReadonlyUser)
                                    {
                                        <form asp-controller="Audit"
                                              asp-action="UploadDocument"
                                              asp-route-nodeId="@node.Id"
                                              asp-route-auditId="@ViewBag.AuditId"
                                              enctype="multipart/form-data"
                                              method="post"
                                              class="d-flex align-items-center">
                                            <input type="file" name="file" class="form-control form-control-sm me-2"
                                                   required @(isVerified ? "disabled" : "") />
                                            <button type="submit" class="btn btn-sm btn-secondary" @(isVerified ? "disabled" : "")>
                                                Upload
                                            </button>
                                        </form>
                                    }
                                </div>

                                @if (node.ScoreInput == "F")
                                {
                                    <div class="alert alert-danger small mt-2">
                                        <i class="bi bi-exclamation-triangle-fill me-1"></i>
                                        <strong>Penalti:</strong> @node.PenaltyAlert
                                    </div>
                                }

                                @if (!string.IsNullOrWhiteSpace(node.Comment))
                                {
                                    <div class="mb-3">
                                        <label class="fw-semibold text-muted">Catatan Penilaian:</label>
                                        <div class="border rounded p-2 bg-light small">
                                            @node.Comment
                                        </div>
                                    </div>
                                }
                            }


                            // <div class="d-flex gap-2 align-items-center mb-3">
                            //     @if (node.MediaItems?.Any() ?? false)
                            //     {
                            //         <button class="btn btn-outline-primary btn-sm"
                            //                 onclick='showMediaPopup(@Html.Raw(JsonConvert.SerializeObject(node.MediaItems ?? new List<MediaItem> { })))'>
                            //             <i class="bi bi-image me-1"></i> Lihat Dokumentasi
                            //         </button>
                            //     }

                            //     @if (!isReadonlyUser)
                            //     {
                            //         <form asp-controller="Audit" asp-action="UploadDocument"
                            //               asp-route-nodeId="@node.Id"
                            //               asp-route-auditId="@ViewBag.AuditId"
                            //               enctype="multipart/form-data"
                            //               method="post"
                            //               class="d-flex align-items-center">
                            //             <input type="file" name="file" class="form-control form-control-sm me-2"
                            //                    required @(isVerified ? "disabled" : "") />
                            //             <button type="submit" class="btn btn-sm btn-secondary"
                            //             @(isVerified ? "disabled" : "")>
                            //                 Upload
                            //             </button>
                            //         </form>
                            //     }
                            // </div>
                        }


                        @if (node.ScoreInput == "X" && node.ScoreX.HasValue)
                        {
                            <div class="mt-1">
                                <span class="badge bg-info text-dark">Nilai X: @node.ScoreX.Value.ToString("0.00")</span>
                            </div>
                        }

                        @if (node.Children?.Any() ?? false)
                        {
                            <ul class="list-unstyled mt-3">
                                @foreach (var child in node.Children)
                                {
                                    RenderChecklistNode(child, level + 1, isVerified, isReadonlyUser);
                                }
                            </ul>
                        }

                    </div>
                </div>
            </div>
        </li>
    }
}