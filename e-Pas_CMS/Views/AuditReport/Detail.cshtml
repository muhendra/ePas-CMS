@using e_Pas_CMS.ViewModels
@using Newtonsoft.Json
@model DetailReportViewModel

@{
    ViewData["Title"] = "Detail Laporan Audit";
    bool isVerified = Model.Status?.ToUpper() == "VERIFIED";
}

@Html.AntiForgeryToken()

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<style>
    /* Gaya tampilan badge compliance */
    .compliance-badge {
    display: inline-block;
    min-width: 90px;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 0.5rem;
    padding: 0.25rem 0.5rem;
    text-align: center;
    line-height: 1.2;
    color: white;
    }

    .bg-excellent {
    background-color: #f0ad4e; /* orange */
    }

    .bg-good {
    background-color: #5cb85c; /* green */
    }

    .bg-improve {
    background-color: #d9534f; /* red */
    }

    .bg-none {
    background-color: #6c757d; /* gray */
    }
</style>

<!-- HEADER ATAS -->
<div class="d-flex align-items-center justify-content-between mb-4">
    <div>
        <h2 class="fw-bold mb-1">
            Detail Laporan Audit Performa SPBU
            <small class="text-muted">(@Model.AuditType)</small>
        </h2>
        <div>
            <small>Daftar Report / </small>
            <a class="text-primary text-decoration-none"
            href="@Url.Action("Index", "AuditReport")">
                @Model.ReportNo <i class="bi bi-caret-down-fill"></i>
            </a>
        </div>
    </div>
    <div>
        <a class="btn btn-outline-primary"
        href="@Url.Action("DownloadPdf", "AuditReport", new { id = Context.Request.RouteValues["id"] })">
            <i class="bi bi-file-earmark-pdf"></i> Download PDF
        </a>
    </div>
</div>

<!-- STATUS -->
@if (isVerified)
{
    <div class="alert alert-success text-center py-2 mb-4">
        <strong>CERTIFIED</strong>
    </div>
}
else
{
    <div class="alert alert-warning text-center py-2 mb-4">
        <strong>UNDER REVIEW</strong>
    </div>
}

<!-- INFORMASI SPBU -->
<div class="card mb-5 shadow-sm">
    <div class="card-body">
        <h5 class="card-title mb-4">Informasi SPBU</h5>
        <div class="row gy-3">
            <div class="col-md-3">
                <strong>Nomor SPBU</strong><br />
                @Model.SpbuNo
            </div>
            <div class="col-md-3">
                <strong>Region</strong><br />
                @Model.Region
            </div>
            <div class="col-md-3">
                <strong>Kabupaten/Kota</strong><br />
                @Model.Kota
            </div>
            <div class="col-md-3">
                <strong>Alamat SPBU</strong><br />
                @Model.Alamat
            </div>

            <div class="col-md-3">
                <strong>Nama Pemilik SPBU</strong><br />
                @Model.OwnerName
            </div>
            <div class="col-md-3">
                <strong>Nama Manajer</strong><br />
                @Model.ManagerName
            </div>
            <div class="col-md-3">
                <strong>Tipe Kepemilikan</strong><br />
                @Model.OwnershipType
            </div>
            <div class="col-md-3">
                <strong>Quarter</strong><br />
                @Model.Quarter
            </div>

            <div class="col-md-3">
                <strong>Tahun</strong><br />
                @Model.Year
            </div>
            <div class="col-md-3">
                <strong>MOR</strong><br />
                @Model.MOR
            </div>
            <div class="col-md-3">
                <strong>Sales Area</strong><br />
                @Model.SalesArea
            </div>
            <div class="col-md-3">
                <strong>SBM</strong><br />
                @Model.SBM
            </div>

            <div class="col-md-3">
                <strong>Tipe Audit</strong><br />
                @Model.AuditType
            </div>
            <div class="col-md-3">
                <strong>Kelas SPBU</strong><br />
                @Model.ClassSPBU
            </div>
            <div class="col-md-3">
                <strong>Telepon</strong><br />
                @Model.Phone
            </div>
        </div>
    </div>
</div>

<!-- LAPORAN PENILAIAN (Skor dan Level) -->
<div class="mb-5">
    <h4 class="fw-bold">Laporan Penilaian</h4>

    <!-- Total Score -->
    <div class="bg-warning rounded-3 text-center py-2 mb-1">
        <strong>
            Total Score (TS): @Model.TotalScore.ToString("0.00")% &mdash;
            @((Model.TotalScore >= Model.MinPassingScore) ? "EXCELLENT" : "GOOD")
        </strong>
    </div>
    <div class="text-center text-muted mb-3">
        Nilai Minimum Pasti Pas: @Model.MinPassingScore.ToString("0.00")%
    </div>

    <!-- Level Konfirmasi Pertamina Way (Elemen) -->
    <h5 class="fw-bold mt-5">Level Konfirmasi Pertamina Way (Elemen)</h5>
    <div class="table-responsive">
        <table class="table table-bordered align-middle shadow-sm">
            <thead class="table-light">
                <tr class="fw-bold">
                    <th style="width: 45%">Indikator Penilaian</th>
                    <th style="width: 15%" class="text-center">Bobot Nilai</th>
                    <th style="width: 20%" class="text-center">Nilai Minimum Pasti Pas</th>
                    <th style="width: 20%" class="text-center">Compliance Level</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var element in Model.Elements)
                {
                    var scoreFraction = element.ScoreAF ?? 0m; // ScoreAF: nilai 0.00-1.00 dari elemen tersebut
                    string level = "-";
                    string badgeClass = "bg-none";

                    if (scoreFraction >= 1.00m)
                    {
                        level = "Excellent";
                        badgeClass = "bg-excellent";
                    }
                    else if (scoreFraction >= 0.875m)
                    {
                        level = "Good";
                        badgeClass = "bg-good";
                    }
                    else
                    {
                        level = "Needs Improvement";
                        badgeClass = "bg-improve";
                    }

                    <tr>
                        <td>
                            <strong>@element.Title</strong><br />
                            @if (!string.IsNullOrWhiteSpace(element.Description))
                            {
                                <span class="text-muted small">@element.Description</span>
                            }
                        </td>
                        <td class="text-center">@((int)(element.Weight ?? 0))</td>
                        <td class="text-center">85,00%</td> @* Nilai minimum (85%) ditampilkan statis *@
                        <td class="text-center">
                            <div class="compliance-badge @badgeClass">
                                @($"{(scoreFraction * 100):0.##}%")<br />
                                <small>@level</small>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Conformity Level by Pertamina Way (Sub-Element) -->
    <h5 class="fw-bold mt-5">Conformity Level by Pertamina Way (Sub - Element)</h5>
    @foreach (var element in Model.Elements)
    {
        // Hanya tampilkan sub-elemen jika elemen ini memiliki deskripsi (menandakan elemen ini adalah kategori dengan sub-pertanyaan)
        if (string.IsNullOrWhiteSpace(element.Description)) { continue; }

        var elementScore = element.ScoreAF ?? 0m;
        string elementScoreStr = elementScore.ToString("0.00");

        <div class="mt-4">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="fw-bold mb-0">@element.Description</h6>
                @* <div class="text-muted">
                    Skor: <strong>@elementScoreStr</strong>
                </div> *@
            </div>

            <table class="table table-bordered align-middle">
                <thead class="table-light">
                    <tr>
                        <th style="width: 60%">Indikator Penilaian</th>
                        <th style="width: 20%" class="text-center">Marks</th>
                        <th style="width: 20%" class="text-center">Compliance Level</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var child in element.Children)
                    {
                        decimal? af = child.ScoreAF;
                        string level = "-";
                        string badgeClass = "bg-none";
                        string scoreDisplay = "-";

                        if (af.HasValue)
                        {
                            var scorePercent = af.Value * 100;
                            scoreDisplay = $"{scorePercent:0.##}%";

                            if (scorePercent >= 100m)
                            {
                                level = "Excellent";
                                badgeClass = "bg-excellent";
                            }
                            else if (scorePercent >= 87.5m)
                            {
                                level = "Good";
                                badgeClass = "bg-good";
                            }
                            else
                            {
                                level = "Needs Improvement";
                                badgeClass = "bg-improve";
                            }
                        }

                        <tr>
                            <td>@child.Description</td>
                            <td class="text-center">@((child.Weight ?? 0).ToString("0.##"))</td>
                            <td class="text-center">
                                <div class="compliance-badge @badgeClass">
                                    @scoreDisplay<br />
                                    <small>@level</small>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- KOMENTAR AUDITOR -->
<div class="card mb-5 shadow-sm">
    <div class="card-body">
        <h5 class="fw-bold mb-4">Komentar Auditor</h5>

        <div class="mb-4">
            <strong>Staf Terlatih dan Termotivasi:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Model.KomentarStaf
            </div>
        </div>

        <div class="mb-4">
            <strong>Jaminan Kualitas dan Kuantitas:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Model.KomentarQuality
            </div>
        </div>

        <div class="mb-4">
            <strong>Peralatan Terpelihara dan HSSE:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Model.KomentarHSSE
            </div>
        </div>

        <div class="mb-4">
            <strong>Tampilan Fisik Seragam:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Model.KomentarVisual
            </div>
        </div>

        <div>
            <strong>Komentar Manajer SPBU:</strong>
            <div class="border rounded p-3 bg-light mt-2">
                @Model.KomentarManager
            </div>
        </div>
    </div>
</div>

@{
    var checklistViewData = new ViewDataDictionary(ViewData);
    checklistViewData["Level"] = 0;
    checklistViewData["IsVerified"] = isVerified;
    checklistViewData["IsReadonlyUser"] = false;
    checklistViewData["AuditId"] = ViewBag.AuditId;
}

@if (Model.AuditType == "Mystery Audit" || Model.AuditType == "Regular Audit" || Model.AuditType == "Basic Operational")
{
    <h4 class="mt-5 fw-bold">Checklist Audit</h4>
    @await Html.PartialAsync("_ChecklistPartial", Model.Elements, checklistViewData)
}



<!-- Q&Q CHECK (tabel hasil Quality & Quantity Check jika ada) -->
@if (Model.QqChecks?.Any() == true)
{
    <h4 class="mt-5 fw-bold">Q&amp;Q Check</h4>
    <div class="table-responsive">
        <table class="table table-bordered table-striped mt-3">
            <thead class="table-light">
                <tr>
                    <th>Nozzle Number</th>
                    <th>DU Make</th>
                    <th>DU Serial No</th>
                    <th>Product</th>
                    <th>Mode</th>
                    <th>Qty Var (m)</th>
                    <th>Qty Var (%)</th>
                    <th>Density</th>
                    <th>Temp</th>
                    <th>Density15°</th>
                    <th>Ref Density15°</th>
                    <th>Tank No</th>
                    <th>Density Var</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var qq in Model.QqChecks)
                {
                    <tr>
                        <td>@qq.NozzleNumber</td>
                        <td>@qq.DuMake</td>
                        <td>@qq.DuSerialNo</td>
                        <td>@qq.Product</td>
                        <td>@qq.Mode</td>
                        <td>@qq.QuantityVariationWithMeasure</td>
                        <td>@qq.QuantityVariationInPercentage</td>
                        <td>@qq.ObservedDensity</td>
                        <td>@qq.ObservedTemp</td>
                        <td>@qq.ObservedDensity15Degree</td>
                        <td>@qq.ReferenceDensity15Degree</td>
                        <td>@qq.TankNumber</td>
                        <td>@qq.DensityVariation</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- BERITA ACARA (Catatan audit dan lampiran final) -->
@if (!string.IsNullOrWhiteSpace(Model.Notes) || Model.FinalDocuments.Any())
{
    <div class="card p-4 mb-5 shadow-sm mt-5">
        <h4 class="fw-bold mb-4">Berita Acara</h4>

        @if (!string.IsNullOrWhiteSpace(Model.Notes))
        {
            <div class="mb-3">
                <label class="fw-semibold">Isi Catatan</label>
                <div class="border rounded p-3 bg-light">
                    @Model.Notes
                </div>
            </div>
        }

        @if (Model.FinalDocuments.Any())
        {
            <div class="mb-2 fw-semibold mt-4">Bukti Dokumen/Foto</div>
            <ul class="list-unstyled">
                @foreach (var doc in Model.FinalDocuments)
                {
                    <li class="mb-2">
                        <i class="bi bi-file-earmark-image text-primary"></i>
                        <button type="button" class="btn btn-link p-0"
                                onclick="showMediaPopup(@Html.Raw(JsonConvert.SerializeObject(Model.FinalDocuments)))">
                            Lihat Lampiran
                        </button>
                    </li>
                }
            </ul>
        }
    </div>
}

<!-- Modal Media (untuk menampilkan foto/video lampiran) -->
<div class="modal fade" id="mediaModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center" id="mediaModalBody"></div>
            <div class="modal-footer justify-content-center">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <style>
        .rotate-arrow {
            transition: transform .3s;
        }

            .rotate-arrow.rotate {
                transform: rotate(90deg);
            }

        .option-btn.active {
            background-color: #059669;
            color: #fff;
        }

        .carousel-item img, .carousel-item video {
            max-height: 70vh;
            object-fit: contain;
        }

        .modal-body {
            max-height: 80vh;
            overflow-y: auto;
        }
    </style>
}

@section Scripts {
    <script>
        // Fungsi untuk menampilkan popup modal berisi media (gambar/video)
        function showMediaPopup(items) {
            const container = document.getElementById('mediaModalBody');
            container.innerHTML = '';
            if (!items || !items.length) {
                container.textContent = 'Tidak ada media.';
            } else if (items.length === 1) {
                const it = items[0];
                container.innerHTML = it.MediaType.toUpperCase() === 'VIDEO'
                    ? `<video controls class="w-100"><source src="${it.MediaPath}"/></video>`
                    : `<img src="${it.MediaPath}" class="img-fluid"/>`;
            } else {
                const uid = "car_" + Math.floor(Math.random() * 100000);
                let indicators = '', inner = '';
                items.forEach((it, i) => {
                    indicators += `<button type="button" data-bs-target="#${uid}" data-bs-slide-to="${i}"${i === 0 ? ' class="active"' : ''}></button>`;
                    inner += `<div class="carousel-item${i === 0 ? ' active' : ''}">
                                ${it.MediaType === 'VIDEO'
                                    ? `<video controls class="w-100"><source src="${it.MediaPath}"/></video>`
                                    : `<img src="${it.MediaPath}" class="d-block w-100"/>`}
                              </div>`;
                });
                container.innerHTML = `
                      <div id="${uid}" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-indicators">${indicators}</div>
                        <div class="carousel-inner">${inner}</div>
                        <button class="carousel-control-prev" data-bs-target="#${uid}" data-bs-slide="prev">
                          <span class="carousel-control-prev-icon"></span>
                        </button>
                        <button class="carousel-control-next" data-bs-target="#${uid}" data-bs-slide="next">
                          <span class="carousel-control-next-icon"></span>
                        </button>
                      </div>`;
            }
            new bootstrap.Modal(document.getElementById('mediaModal')).show();
        }
    </script>
}

@functions {
    async Task RenderChecklistNode(AuditChecklistNode node, int level, bool isVerified, bool isReadonlyUser)

    {
        var collapseId = $"collapse-{node.Id}";
        var paddingClass = $"ps-{level * 3}";
        <li id="node-@node.Id"
            class="mb-3 @paddingClass"
            data-weight="@(node.Weight ?? 0)"
            data-score-x="@(node.ScoreX?.ToString("0.00") ?? "0")">

            <div class="card border-secondary">
                <!-- HEADER: toggle + skor -->
                <div class="card-header bg-light d-flex align-items-center">
                    <button class="btn btn-link flex-grow-1 text-start py-0"
                            type="button"
                            data-bs-toggle="collapse"
                            data-bs-target="#@collapseId"
                            aria-expanded="false"
                            aria-controls="@collapseId">
                        <span class="fw-bold text-dark">@node.Title</span>
                        @if (!string.IsNullOrWhiteSpace(node.Description))
                        {
                            <span class="fw-bold fs-6 text-muted ms-2">@node.Description</span>
                        }
                        <i class="bi bi-chevron-right rotate-arrow ms-2"></i>
                    </button>
                    @if (node.ScoreInput != "X")
                    {
                        <div class="ms-auto text-end">
                            <small>Skor:</small>
                            <strong class="score-x" data-node-id="@node.Id">0.00</strong>
                        </div>
                    }
                </div>

                <!-- COLLAPSE BODY -->
                <div id="@collapseId" class="collapse">
                    <div class="card-body">

                        @if (node.Type == "QUESTION")
                        {
                            <div class="option-group mb-3"
                                 data-node-id="@node.Id"
                                 data-score-option="@node.ScoreOption">
                                @{
                                    var opts = (node.ScoreOption ?? "")
                                    .Split('/', StringSplitOptions.RemoveEmptyEntries)
                                    .Select(s => s.Trim().ToUpper())
                                    .SelectMany(o => o == "A-F"
                                    ? new[] { "A", "B", "C", "D", "E", "F" }
                                    : new[] { o })
                                    .Distinct();
                                }
                                @foreach (var opt in opts)
                                {
                                    decimal val = opt switch
                                    {
                                        "A" => 1m,
                                        "B" => 0.8m,
                                        "C" => 0.6m,
                                        "D" => 0.4m,
                                        "E" => 0.2m,
                                        "F" => 0m,
                                        _ => 0m
                                    };
                                    bool active = node.ScoreInput == opt;
                                    <button type="button"
                                            class="btn btn-sm option-btn @(active?"active bg-success text-white":"btn-outline-secondary")"
                                            data-node-id="@node.Id"
                                            data-score="@opt"
                                    @(isVerified ? "disabled" : "")>
                                        @(opt == "X" ? "X" : $"{opt} ({val:0.00})")
                                    </button>
                                }
                            </div>

                            <div class="mb-3">
                                @if (!isReadonlyUser)
                                {
                                    <button type="button"
                                            class="btn btn-sm btn-secondary cancel-score-btn"
                                            data-node-id="@node.Id"
                                    @(isVerified ? "disabled" : "")>
                                        Batal
                                    </button>
                                    <button type="button"
                                            class="btn btn-sm btn-primary update-score-btn"
                                            data-node-id="@node.Id"
                                            data-audit-id="@ViewBag.AuditId"
                                    @(isVerified ? "disabled" : "")>
                                        Update Nilai
                                    </button>
                                }
                            </div>

                            <div class="d-flex gap-2 align-items-center mb-3">
                                @if (node.MediaItems?.Any() ?? false)
                                {
                                    <button class="btn btn-outline-primary btn-sm"
                                            onclick='showMediaPopup(@Html.Raw(JsonConvert.SerializeObject(node.MediaItems ?? new List<MediaItem> { })))'>
                                        <i class="bi bi-image me-1"></i> Lihat Dokumentasi
                                    </button>
                                }
                                @if (!isReadonlyUser)
                                {
                                    <form asp-controller="Audit" asp-action="UploadDocument" asp-route-nodeId="@node.Id" asp-route-auditId="@ViewBag.AuditId" enctype="multipart/form-data" method="post" class="d-flex align-items-center">
                                        <input type="file" name="file" class="form-control form-control-sm me-2" required @(isVerified ? "disabled" : "") />
                                        <button type="submit" class="btn btn-sm btn-primary" @(isVerified ? "disabled" : "")>Upload</button>
                                    </form>
                                }
                            </div>
                        }

                        @if (node.ScoreInput == "X" && node.ScoreX.HasValue)
                        {
                            <div class="mt-1">
                                <span class="badge bg-info text-dark">Nilai X: @node.ScoreX.Value.ToString("0.00")</span>
                            </div>
                        }

                        @if (node.Children?.Any() ?? false)
                        {
                            <ul class="list-unstyled mt-3">
                                @foreach (var child in node.Children)
                                {
                                    RenderChecklistNode(child, level + 1, isVerified, isReadonlyUser);
                                }
                            </ul>
                        }

                    </div>
                </div>
            </div>
        </li>
    }
}
